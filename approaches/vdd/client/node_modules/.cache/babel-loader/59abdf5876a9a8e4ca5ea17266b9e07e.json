{"ast":null,"code":"var _jsxFileName = \"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/App.tsx\";\nimport React from \"react\";\nimport { Typography, Row, Col, Select, Button } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { UploadComponent } from \"./components/UploadComponent\";\nimport { ToolsComponent } from \"./components/ToolsComponent\";\nimport { AlgorithmResultComponent } from \"./components/AlgorithmResultComponent\";\nimport { AppContextProvider, AppContext, SET_ALGORITHM_SLICE_INDEX, SET_ALGORITHM_RESULT } from \"./context/appContext\";\nimport { makeEDFG } from \"./apiService\";\nimport \"./App.css\";\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(AppContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography.Title, {\n    level: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"PARI MATCH\"), /*#__PURE__*/React.createElement(AppContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, ({\n    state,\n    dispatch\n  }) => {\n    const selectAlgorithmSliceIndex = index => dispatch({\n      type: SET_ALGORITHM_SLICE_INDEX,\n      payload: {\n        index\n      }\n    });\n\n    const getEdfgHandler = async () => {\n      if (state.session_id) {\n        const params = {\n          logName: state.session_id,\n          ...state.defined\n        };\n        const {\n          paths_to_edfgs: edfgs\n        } = await makeEDFG(params);\n        dispatch({\n          type: SET_ALGORITHM_RESULT,\n          payload: { ...state.algorithmResult,\n            edfgs\n          }\n        });\n      }\n    };\n\n    if (!state.algorithmResult) {\n      return null;\n    }\n\n    const {\n      algorithmResult: {\n        edfgs,\n        erraticMeasureData\n      },\n      algorithmSliceIndex = 0\n    } = state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      onChange: selectAlgorithmSliceIndex,\n      defaultValue: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }, erraticMeasureData.map((elem, index) => /*#__PURE__*/React.createElement(Select.Option, {\n      value: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 23\n      }\n    }, \"Section \", index))), !(edfgs === null || edfgs === void 0 ? void 0 : edfgs[algorithmSliceIndex]) && /*#__PURE__*/React.createElement(Button, {\n      onClick: getEdfgHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"Get EDFG\"));\n  })), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, ({\n    state\n  }) => {\n    if (!state.session_id) {\n      return /*#__PURE__*/React.createElement(UploadComponent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: state.algorithmResult ? 1 : 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ToolsComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: state.algorithmResult ? 23 : 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(AlgorithmResultComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    })));\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/App.tsx"],"names":["React","Typography","Row","Col","Select","Button","UploadComponent","ToolsComponent","AlgorithmResultComponent","AppContextProvider","AppContext","SET_ALGORITHM_SLICE_INDEX","SET_ALGORITHM_RESULT","makeEDFG","App","state","dispatch","selectAlgorithmSliceIndex","index","type","payload","getEdfgHandler","session_id","params","logName","defined","paths_to_edfgs","edfgs","algorithmResult","erraticMeasureData","algorithmSliceIndex","map","elem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Typography, Row, Col, Select, Button } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nimport { UploadComponent } from \"./components/UploadComponent\";\nimport { ToolsComponent } from \"./components/ToolsComponent\";\nimport { AlgorithmResultComponent } from \"./components/AlgorithmResultComponent\";\nimport {\n  AppContextProvider,\n  AppContext,\n  SET_ALGORITHM_SLICE_INDEX,\n  SET_ALGORITHM_RESULT,\n} from \"./context/appContext\";\nimport { makeEDFG } from \"./apiService\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <AppContextProvider>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Typography.Title level={1}>PARI MATCH</Typography.Title>\n          <AppContext.Consumer>\n            {({ state, dispatch }) => {\n              const selectAlgorithmSliceIndex = (index: number) =>\n                dispatch({\n                  type: SET_ALGORITHM_SLICE_INDEX,\n                  payload: { index },\n                });\n              const getEdfgHandler = async () => {\n                if (state.session_id) {\n                  const params = {\n                    logName: state.session_id,\n                    ...state.defined,\n                  };\n                  const { paths_to_edfgs: edfgs } = await makeEDFG(params);\n\n                  dispatch({\n                    type: SET_ALGORITHM_RESULT,\n                    payload: {\n                      ...state.algorithmResult,\n                      edfgs,\n                    },\n                  });\n                }\n              };\n              if (!state.algorithmResult) {\n                return null;\n              }\n\n              const {\n                algorithmResult: { edfgs, erraticMeasureData },\n                algorithmSliceIndex = 0,\n              } = state;\n\n              return (\n                <div>\n                  <Select onChange={selectAlgorithmSliceIndex} defaultValue={0}>\n                    {erraticMeasureData.map((elem, index) => (\n                      <Select.Option value={index}>\n                        Section {index}\n                      </Select.Option>\n                    ))}\n                  </Select>\n\n                  {!edfgs?.[algorithmSliceIndex] && (\n                    <Button onClick={getEdfgHandler}>Get EDFG</Button>\n                  )}\n                </div>\n              );\n            }}\n          </AppContext.Consumer>\n        </header>\n        <main>\n          <AppContext.Consumer>\n            {({ state }) => {\n              if (!state.session_id) {\n                return <UploadComponent />;\n              }\n\n              return (\n                <Row>\n                  <Col span={state.algorithmResult ? 1 : 24}>\n                    <ToolsComponent />\n                  </Col>\n                  <Col span={state.algorithmResult ? 23 : 0}>\n                    <AlgorithmResultComponent />\n                  </Col>\n                </Row>\n              );\n            }}\n          </AppContext.Consumer>\n        </main>\n      </div>\n    </AppContextProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}