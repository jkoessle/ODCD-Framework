{"ast":null,"code":"var _jsxFileName = \"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/components/ToolsComponent/index.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { Slider, Col, Checkbox, Radio, Button, Divider, Row, Tooltip, Layout } from \"antd\";\nimport { QuestionCircleOutlined, SettingTwoTone } from \"@ant-design/icons\";\nimport { AppContext, UPDATE_DEFINED_PARAM_ACTION, SET_ALGORITHM_RESULT } from \"../../context/appContext\";\nimport { makeDriftMap, parseErraticMeasureCsv, makeSpreadOfConstraints, makeStationarityTest, makeAutocorrelationPlots } from \"../../apiService\";\n\nconst getDefaultMark = (defaultValue = 0) => ({\n  [defaultValue]: defaultValue\n});\n\nexport const ToolsComponent = () => {\n  var _state$defined, _state$colorTheme, _state$defined2, _state$typeConstr, _state$defined$driftA, _state$defined3, _state$defined$noSort, _state$defined4;\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  const [loading, setLoading] = useState(false);\n  const [collapsed, toggleSider] = useState(false);\n\n  if (!state.session_id) {\n    return null;\n  }\n\n  const onAfterChangeSlider = key => value => {\n    dispatch({\n      type: UPDATE_DEFINED_PARAM_ACTION,\n      payload: {\n        [key]: value\n      }\n    });\n  };\n\n  const onCheckboxChange = key => event => {\n    dispatch({\n      type: UPDATE_DEFINED_PARAM_ACTION,\n      payload: {\n        [key]: event.target.checked\n      }\n    });\n  };\n\n  const onRadioChange = key => event => {\n    dispatch({\n      type: UPDATE_DEFINED_PARAM_ACTION,\n      payload: {\n        [key]: event.target.value\n      }\n    });\n  };\n\n  const onStartAlgorithm = async () => {\n    if (state.session_id) {\n      setLoading(true);\n\n      try {\n        const params = {\n          logName: state.session_id,\n          ...state.defined\n        };\n        const algorithmResult = await makeDriftMap(params);\n        const {\n          spread_constraints\n        } = await makeSpreadOfConstraints(params);\n        const stationarityTestResult = await makeStationarityTest(params);\n        const erraticMeasureData = await parseErraticMeasureCsv(algorithmResult.path_to_erratic_measure);\n        const {\n          paths_to_autocorrelation: autocorrelationPlots\n        } = await makeAutocorrelationPlots(params);\n        dispatch({\n          type: SET_ALGORITHM_RESULT,\n          payload: { ...algorithmResult,\n            erraticMeasureData,\n            spread_constraints,\n            stationarityTestResult,\n            autocorrelationPlots\n          }\n        });\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Layout.Sider, {\n    collapsible: true,\n    collapsed: collapsed,\n    onCollapse: toggleSider,\n    width: 350,\n    className: \"App-sider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, collapsed && /*#__PURE__*/React.createElement(SettingTwoTone, {\n    style: {\n      width: '50px',\n      height: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      opacity: collapsed ? 0 : 1,\n      pointerEvents: collapsed ? \"none\" : \"inherit\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"the size of the sliding window for mining declare constraints\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Win size\", \" \", /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    min: state.subL_min,\n    max: state.subL_max,\n    defaultValue: state.subL_default,\n    marks: getDefaultMark(state.subL_default),\n    onAfterChange: onAfterChangeSlider(\"subL\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"this parameter sets the number of event sequences will be skipped with each new window. this number shouldn't be larger than the Win size\",\n    color: \"pink\",\n    key: \"?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, \"Slide Size\", /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    min: state.sliBy_min,\n    max: state.sliBy_max,\n    defaultValue: state.sliBy_default,\n    marks: getDefaultMark(state.sliBy_default),\n    onAfterChange: onAfterChangeSlider(\"sliBy\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"this parameter affects the hierarchical clustering algorithm to determine the number of clusters,  and there fore number of changing behaviours. the larger the number the less clusters will be found \",\n    color: \"orange\",\n    key: \"?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, \"Cut Threshold\", \" \", /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    min: state.cluCut_min,\n    max: state.cluCut_max,\n    defaultValue: state.cluCut_default,\n    marks: getDefaultMark(state.cluCut_default),\n    onAfterChange: onAfterChangeSlider(\"cluCut\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"choose the color scheme for the Drift Map visualizatoin. All of the options should be colorblind friendly. Read more about color schemas at https://matplotlib.org/examples/color/colormaps_reference.html\",\n    color: \"volcano\",\n    key: \"?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, \"Color scheme\", \" \", /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Radio.Group, {\n    defaultValue: ((_state$defined = state.defined) === null || _state$defined === void 0 ? void 0 : _state$defined.colorTheme) || state.colorTheme_default,\n    onChange: onRadioChange(\"colorTheme\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, (_state$colorTheme = state.colorTheme) === null || _state$colorTheme === void 0 ? void 0 : _state$colorTheme.map(theme => /*#__PURE__*/React.createElement(Radio, {\n    value: theme,\n    key: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, theme))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Choose between three types of measures on Declare constraints\",\n    color: \"lime\",\n    key: \"?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, \"Type of constraint\", \" \", /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Radio.Group, {\n    defaultValue: ((_state$defined2 = state.defined) === null || _state$defined2 === void 0 ? void 0 : _state$defined2.typeConstr) || state.typeConstr_default,\n    onChange: onRadioChange(\"typeConstr\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, (_state$typeConstr = state.typeConstr) === null || _state$typeConstr === void 0 ? void 0 : _state$typeConstr.map(type => /*#__PURE__*/React.createElement(Radio, {\n    value: type,\n    key: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, type))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, \"Additional parameters\")), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Click in driftAll if you want find sudden drifts in all separate clusters of behaviour. Leave it if you want to find sudden drifts on the whole dataset.\",\n    color: \"geekblue\",\n    key: \"?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: (_state$defined$driftA = (_state$defined3 = state.defined) === null || _state$defined3 === void 0 ? void 0 : _state$defined3.driftAll) !== null && _state$defined$driftA !== void 0 ? _state$defined$driftA : state.driftAll,\n    onChange: onCheckboxChange(\"driftAll\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, \"drift all\", \" \", /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Click in noSort if you do not want to sort constrants in clusters by similarity for the drift map. This only influences the visul representation\",\n    color: \"geekblue\",\n    key: \"?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: (_state$defined$noSort = (_state$defined4 = state.defined) === null || _state$defined4 === void 0 ? void 0 : _state$defined4.noSort) !== null && _state$defined$noSort !== void 0 ? _state$defined$noSort : state.noSort,\n    onChange: onCheckboxChange(\"noSort\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 15\n    }\n  }, \"no sort\", \" \", /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    loading: loading,\n    onClick: onStartAlgorithm,\n    style: {\n      margin: \"20px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, \"Start algorithm\")))));\n};","map":{"version":3,"sources":["/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/components/ToolsComponent/index.tsx"],"names":["React","useContext","useState","Slider","Col","Checkbox","Radio","Button","Divider","Row","Tooltip","Layout","QuestionCircleOutlined","SettingTwoTone","AppContext","UPDATE_DEFINED_PARAM_ACTION","SET_ALGORITHM_RESULT","makeDriftMap","parseErraticMeasureCsv","makeSpreadOfConstraints","makeStationarityTest","makeAutocorrelationPlots","getDefaultMark","defaultValue","ToolsComponent","state","dispatch","loading","setLoading","collapsed","toggleSider","session_id","onAfterChangeSlider","key","value","type","payload","onCheckboxChange","event","target","checked","onRadioChange","onStartAlgorithm","params","logName","defined","algorithmResult","spread_constraints","stationarityTestResult","erraticMeasureData","path_to_erratic_measure","paths_to_autocorrelation","autocorrelationPlots","error","console","width","height","opacity","pointerEvents","subL_min","subL_max","subL_default","sliBy_min","sliBy_max","sliBy_default","cluCut_min","cluCut_max","cluCut_default","colorTheme","colorTheme_default","map","theme","typeConstr","typeConstr_default","driftAll","noSort","margin"],"mappings":"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","sourcesContent":["import React, { FC, useContext, useState } from \"react\";\nimport {\n  Slider,\n  Col,\n  Checkbox,\n  Radio,\n  Button,\n  Divider,\n  Row,\n  Tooltip,\n  Layout,\n} from \"antd\";\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\nimport { SliderValue } from \"antd/lib/slider\";\nimport { RadioChangeEvent } from \"antd/lib/radio\";\nimport { QuestionCircleOutlined, SettingTwoTone } from \"@ant-design/icons\";\nimport {\n  AppContext,\n  UPDATE_DEFINED_PARAM_ACTION,\n  SET_ALGORITHM_RESULT,\n} from \"../../context/appContext\";\n\nimport {\n  makeDriftMap,\n  parseErraticMeasureCsv,\n  makeSpreadOfConstraints,\n  makeStationarityTest,\n  makeAutocorrelationPlots,\n} from \"../../apiService\";\n\nconst getDefaultMark = (defaultValue: number = 0) => ({\n  [defaultValue]: defaultValue,\n});\n\nexport const ToolsComponent: FC = () => {\n  const { state, dispatch } = useContext(AppContext);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [collapsed, toggleSider] = useState<boolean>(false);\n\n  if (!state.session_id) {\n    return null;\n  }\n\n  const onAfterChangeSlider = (key: string) => (value: SliderValue) => {\n    dispatch({ type: UPDATE_DEFINED_PARAM_ACTION, payload: { [key]: value } });\n  };\n\n  const onCheckboxChange = (key: string) => (event: CheckboxChangeEvent) => {\n    dispatch({\n      type: UPDATE_DEFINED_PARAM_ACTION,\n      payload: { [key]: event.target.checked },\n    });\n  };\n\n  const onRadioChange = (key: string) => (event: RadioChangeEvent) => {\n    dispatch({\n      type: UPDATE_DEFINED_PARAM_ACTION,\n      payload: { [key]: event.target.value },\n    });\n  };\n\n  const onStartAlgorithm = async () => {\n    if (state.session_id) {\n      setLoading(true);\n      try {\n        const params = { logName: state.session_id, ...state.defined };\n        const algorithmResult = await makeDriftMap(params);\n        const { spread_constraints } = await makeSpreadOfConstraints(params);\n        const stationarityTestResult = await makeStationarityTest(params);\n        const erraticMeasureData = await parseErraticMeasureCsv(\n          algorithmResult.path_to_erratic_measure\n        );\n        const {\n          paths_to_autocorrelation: autocorrelationPlots,\n        } = await makeAutocorrelationPlots(params);\n\n        dispatch({\n          type: SET_ALGORITHM_RESULT,\n          payload: {\n            ...algorithmResult,\n            erraticMeasureData,\n            spread_constraints,\n            stationarityTestResult,\n            autocorrelationPlots,\n          },\n        });\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <Layout.Sider\n      collapsible\n      collapsed={collapsed}\n      onCollapse={toggleSider}\n      width={350}\n      className=\"App-sider\"\n    >\n      {collapsed && <SettingTwoTone style={{width: '50px', height: '50px'}}/>}\n      <div\n        style={{\n          opacity: collapsed ? 0 : 1,\n          pointerEvents: collapsed ? \"none\" : \"inherit\",\n        }}\n      >\n        <Row>\n          {/* <Tooltip title=\"Win size\" color=\"pink\"> */}\n          <Col span={24}>\n            <Tooltip\n              title=\"the size of the sliding window for mining declare constraints\"\n              color={\"green\"}\n            >\n              <Divider>\n                Win size{\" \"}\n                <sup>\n                  <QuestionCircleOutlined />\n                </sup>\n              </Divider>\n            </Tooltip>\n          </Col>\n          <Col span={24}>\n            <Slider\n              min={state.subL_min}\n              max={state.subL_max}\n              defaultValue={state.subL_default}\n              marks={getDefaultMark(state.subL_default)}\n              onAfterChange={onAfterChangeSlider(\"subL\")}\n            />\n          </Col>\n          {/* </Tooltip> */}\n        </Row>\n        <Row>\n          <Col span={24}>\n            <Tooltip\n              title=\"this parameter sets the number of event sequences will be skipped with each new window. this number shouldn't be larger than the Win size\"\n              color={\"pink\"}\n              key={\"?\"}\n            >\n              <Divider>\n                Slide Size\n                <sup>\n                  <QuestionCircleOutlined />\n                </sup>\n              </Divider>\n            </Tooltip>\n          </Col>\n          <Col span={24}>\n            <Slider\n              min={state.sliBy_min}\n              max={state.sliBy_max}\n              defaultValue={state.sliBy_default}\n              marks={getDefaultMark(state.sliBy_default)}\n              onAfterChange={onAfterChangeSlider(\"sliBy\")}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <Tooltip\n              title=\"this parameter affects the hierarchical clustering algorithm to determine the number of clusters, \n                          and there fore number of changing behaviours. the larger the number the less clusters will be found \"\n              color={\"orange\"}\n              key={\"?\"}\n            >\n              <Divider>\n                Cut Threshold{\" \"}\n                <sup>\n                  <QuestionCircleOutlined />\n                </sup>\n              </Divider>\n            </Tooltip>\n          </Col>\n          <Col span={24}>\n            <Slider\n              min={state.cluCut_min}\n              max={state.cluCut_max}\n              defaultValue={state.cluCut_default}\n              marks={getDefaultMark(state.cluCut_default)}\n              onAfterChange={onAfterChangeSlider(\"cluCut\")}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <Tooltip\n              title=\"choose the color scheme for the Drift Map visualizatoin. All of the options should be colorblind friendly. Read more about color schemas at https://matplotlib.org/examples/color/colormaps_reference.html\"\n              color={\"volcano\"}\n              key={\"?\"}\n            >\n              <Divider>\n                Color scheme{\" \"}\n                <sup>\n                  <QuestionCircleOutlined />\n                </sup>\n              </Divider>\n            </Tooltip>\n          </Col>\n          <Col span={24}>\n            <Radio.Group\n              defaultValue={\n                state.defined?.colorTheme || state.colorTheme_default\n              }\n              onChange={onRadioChange(\"colorTheme\")}\n            >\n              {state.colorTheme?.map((theme) => (\n                <Radio value={theme} key={theme}>\n                  {theme}\n                </Radio>\n              ))}\n            </Radio.Group>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <Tooltip\n              title=\"Choose between three types of measures on Declare constraints\"\n              color={\"lime\"}\n              key={\"?\"}\n            >\n              <Divider>\n                Type of constraint{\" \"}\n                <sup>\n                  <QuestionCircleOutlined />\n                </sup>\n              </Divider>\n            </Tooltip>\n          </Col>\n          <Col span={24}>\n            <Radio.Group\n              defaultValue={\n                state.defined?.typeConstr || state.typeConstr_default\n              }\n              onChange={onRadioChange(\"typeConstr\")}\n            >\n              {state.typeConstr?.map((type) => (\n                <Radio value={type} key={type}>\n                  {type}\n                </Radio>\n              ))}\n            </Radio.Group>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <Divider>Additional parameters</Divider>\n          </Col>\n          <Col span={24}>\n            <Tooltip\n              title=\"Click in driftAll if you want find sudden drifts in all separate clusters of behaviour. Leave it if you want to find sudden drifts on the whole dataset.\"\n              color={\"geekblue\"}\n              key={\"?\"}\n            >\n              <Checkbox\n                checked={state.defined?.driftAll ?? state.driftAll}\n                onChange={onCheckboxChange(\"driftAll\")}\n              >\n                drift all{\" \"}\n                <sup>\n                  <QuestionCircleOutlined />\n                </sup>\n              </Checkbox>\n            </Tooltip>\n            <br />\n            <Tooltip\n              title=\"Click in noSort if you do not want to sort constrants in clusters by similarity for the drift map. This only influences the visul representation\"\n              color={\"geekblue\"}\n              key={\"?\"}\n            >\n              <Checkbox\n                checked={state.defined?.noSort ?? state.noSort}\n                onChange={onCheckboxChange(\"noSort\")}\n              >\n                no sort{\" \"}\n                <sup>\n                  <QuestionCircleOutlined />\n                </sup>\n              </Checkbox>\n            </Tooltip>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <Button\n              loading={loading}\n              onClick={onStartAlgorithm}\n              style={{ margin: \"20px 0\" }}\n            >\n              Start algorithm\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    </Layout.Sider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}