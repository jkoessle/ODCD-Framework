{"ast":null,"code":"var _jsxFileName = \"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/components/UploadComponent/index.tsx\";\nimport React, { useState, useContext } from \"react\";\nimport { Upload, Button } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { uploadFile } from \"../../apiService\";\nimport { AppContext, SET_SESSION_ACTION } from \"../../context/appContext\";\nexport const UploadComponent = () => {\n  const {\n    dispatch\n  } = useContext(AppContext);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmitForm = async ({\n    file,\n    onSuccess,\n    onError\n  }) => {\n    if (file) {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      try {\n        const response = await uploadFile(formData);\n        dispatch({\n          type: SET_SESSION_ACTION,\n          payload: response\n        });\n        onSuccess(response, file);\n      } catch (error) {\n        console.log(error);\n        onError(error);\n      }\n\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Upload, {\n    accept: \".xes\",\n    name: \"file\",\n    customRequest: handleSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UploadOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), \" Click to Upload\"));\n};","map":{"version":3,"sources":["/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/components/UploadComponent/index.tsx"],"names":["React","useState","useContext","Upload","Button","UploadOutlined","uploadFile","AppContext","SET_SESSION_ACTION","UploadComponent","dispatch","loading","setLoading","handleSubmitForm","file","onSuccess","onError","formData","FormData","append","response","type","payload","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,MAA/B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,EAAqBC,kBAArB,QAA+C,0BAA/C;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAeR,UAAU,CAACK,UAAD,CAA/B;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAU,KAAV,CAAtC;;AAEA,QAAMY,gBAAgB,GAAG,OAAO;AAC9BC,IAAAA,IAD8B;AAE9BC,IAAAA,SAF8B;AAG9BC,IAAAA;AAH8B,GAAP,KAQnB;AACJ,QAAIF,IAAJ,EAAU;AACRF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMK,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBL,IAAxB;;AACA,UAAI;AACF,cAAMM,QAAQ,GAAG,MAAMd,UAAU,CAACW,QAAD,CAAjC;AACAP,QAAAA,QAAQ,CAAC;AAAEW,UAAAA,IAAI,EAAEb,kBAAR;AAA4Bc,UAAAA,OAAO,EAAEF;AAArC,SAAD,CAAR;AACAL,QAAAA,SAAS,CAACK,QAAD,EAAWN,IAAX,CAAT;AACD,OAJD,CAIE,OAAOS,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAP,QAAAA,OAAO,CAACO,KAAD,CAAP;AACD;;AACDX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAvBD;;AAyBA,sBACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,aAAa,EAAEC,gBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,qBALF,CADF;AAWD,CAxCM","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Upload, Button } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nimport { uploadFile } from \"../../apiService\";\nimport { AppContext, SET_SESSION_ACTION } from \"../../context/appContext\";\n\nexport const UploadComponent = () => {\n  const { dispatch } = useContext(AppContext);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleSubmitForm = async ({\n    file,\n    onSuccess,\n    onError,\n  }: {\n    file: File;\n    onSuccess: (response: object, file: File) => void;\n    onError: (event: Error, body?: Object) => void;\n  }) => {\n    if (file) {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      try {\n        const response = await uploadFile(formData);\n        dispatch({ type: SET_SESSION_ACTION, payload: response });\n        onSuccess(response, file);\n      } catch (error) {\n        console.log(error);\n        onError(error);\n      }\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Upload\n      accept=\".xes\"\n      name=\"file\"\n      customRequest={handleSubmitForm}\n    >\n      <Button loading={loading}>\n        <UploadOutlined /> Click to Upload\n      </Button>\n    </Upload>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}