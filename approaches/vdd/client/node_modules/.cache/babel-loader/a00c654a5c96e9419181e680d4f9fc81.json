{"ast":null,"code":"export const API_URL = \"https://processdrift.ai.wu.ac.at\"; // const API_URL = 'http://127.0.0.1:5000';\n\nconst cleanUpParams = params => Object.entries(params).reduce((acc, [key, value]) => {\n  if (value) {\n    acc[key] = value;\n  }\n\n  return acc;\n}, {});\n\nexport const uploadFile = body => fetch(`${API_URL}/uploadFile`, {\n  method: \"POST\",\n  body\n}).then(response => response.json()).catch(console.error);\nexport const makeDriftMap = ({\n  session_id,\n  params\n}) => {\n  let url = new URL(`${API_URL}/makeDriftMap`);\n  url.search = new URLSearchParams({\n    logName: session_id,\n    ...(params ? cleanUpParams(params) : {})\n  }).toString();\n  return fetch(url.toString()).then(response => response.json());\n};","map":{"version":3,"sources":["/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/apiService.ts"],"names":["API_URL","cleanUpParams","params","Object","entries","reduce","acc","key","value","uploadFile","body","fetch","method","then","response","json","catch","console","error","makeDriftMap","session_id","url","URL","search","URLSearchParams","logName","toString"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,kCAAhB,C,CACP;;AAEA,MAAMC,aAAa,GAAIC,MAAD,IACpBC,MAAM,CAACC,OAAP,CAAeF,MAAf,EAAuBG,MAAvB,CAA8B,CAACC,GAAD,EAA8B,CAACC,GAAD,EAAMC,KAAN,CAA9B,KAA+C;AAC3E,MAAIA,KAAJ,EAAW;AACTF,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AACD;;AAED,SAAOF,GAAP;AACD,CAND,EAMG,EANH,CADF;;AAQA,OAAO,MAAMG,UAAU,GAAIC,IAAD,IACxBC,KAAK,CAAE,GAAEX,OAAQ,aAAZ,EAA0B;AAC7BY,EAAAA,MAAM,EAAE,MADqB;AAE7BF,EAAAA;AAF6B,CAA1B,CAAL,CAIGG,IAJH,CAISC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAJtB,EAKGC,KALH,CAKSC,OAAO,CAACC,KALjB,CADK;AAQP,OAAO,MAAMC,YAAY,GAAG,CAAC;AAC3BC,EAAAA,UAD2B;AAE3BlB,EAAAA;AAF2B,CAAD,KAMtB;AACJ,MAAImB,GAAG,GAAG,IAAIC,GAAJ,CAAS,GAAEtB,OAAQ,eAAnB,CAAV;AACAqB,EAAAA,GAAG,CAACE,MAAJ,GAAa,IAAIC,eAAJ,CAAoB;AAC/BC,IAAAA,OAAO,EAAEL,UADsB;AAE/B,QAAIlB,MAAM,GAAGD,aAAa,CAACC,MAAD,CAAhB,GAA2B,EAArC;AAF+B,GAApB,EAGVwB,QAHU,EAAb;AAKA,SAAOf,KAAK,CAACU,GAAG,CAACK,QAAJ,EAAD,CAAL,CAAsBb,IAAtB,CAA4BC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAzC,CAAP;AACD,CAdM","sourcesContent":["export const API_URL = \"https://processdrift.ai.wu.ac.at\";\n// const API_URL = 'http://127.0.0.1:5000';\n\nconst cleanUpParams = (params: { [key: string]: any }) =>\n  Object.entries(params).reduce((acc: { [key: string]: any }, [key, value]) => {\n    if (value) {\n      acc[key] = value;\n    }\n\n    return acc;\n  }, {});\nexport const uploadFile = (body: FormData) =>\n  fetch(`${API_URL}/uploadFile`, {\n    method: \"POST\",\n    body,\n  })\n    .then((response) => response.json())\n    .catch(console.error);\n\nexport const makeDriftMap = ({\n  session_id,\n  params,\n}: {\n  session_id: string;\n  params?: { [key: string]: any };\n}) => {\n  let url = new URL(`${API_URL}/makeDriftMap`);\n  url.search = new URLSearchParams({\n    logName: session_id,\n    ...(params ? cleanUpParams(params) : {}),\n  }).toString();\n\n  return fetch(url.toString()).then((response) => response.json());\n};\n"]},"metadata":{},"sourceType":"module"}