{"ast":null,"code":"var _jsxFileName = \"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/AppHeader.tsx\";\nimport React from \"react\";\nimport { Typography, Select, Button } from \"antd\";\nimport { AppContext, SET_ALGORITHM_SLICE_INDEX, SET_ALGORITHM_RESULT } from \"./context/appContext\";\nimport { makeEDFG } from \"./apiService\";\nexport const AppHeader = () => /*#__PURE__*/React.createElement(\"header\", {\n  className: \"App-header\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Typography.Title, {\n  level: 1,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, \"Visual drift detection for sequence data analysis system\"), /*#__PURE__*/React.createElement(AppContext.Consumer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, ({\n  state,\n  dispatch\n}) => {\n  const selectAlgorithmSliceIndex = index => dispatch({\n    type: SET_ALGORITHM_SLICE_INDEX,\n    payload: {\n      index\n    }\n  });\n\n  const getEdfgHandler = async () => {\n    if (state.session_id) {\n      const params = {\n        logName: state.session_id,\n        ...state.defined\n      };\n      const {\n        paths_to_edfgs: edfgs\n      } = await makeEDFG(params);\n      dispatch({\n        type: SET_ALGORITHM_RESULT,\n        payload: { ...state.algorithmResult,\n          edfgs\n        }\n      });\n    }\n  };\n\n  if (!state.algorithmResult) {\n    return null;\n  }\n\n  const {\n    algorithmResult: {\n      edfgs,\n      erraticMeasureData\n    },\n    algorithmSliceIndex = 0\n  } = state;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    onChange: selectAlgorithmSliceIndex,\n    defaultValue: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, erraticMeasureData.map((elem, index) => /*#__PURE__*/React.createElement(Select.Option, {\n    value: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Section \", index))), !(edfgs === null || edfgs === void 0 ? void 0 : edfgs[algorithmSliceIndex]) && /*#__PURE__*/React.createElement(Button, {\n    onClick: getEdfgHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Get EDFG\"));\n}));","map":{"version":3,"sources":["/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/AppHeader.tsx"],"names":["React","Typography","Select","Button","AppContext","SET_ALGORITHM_SLICE_INDEX","SET_ALGORITHM_RESULT","makeEDFG","AppHeader","state","dispatch","selectAlgorithmSliceIndex","index","type","payload","getEdfgHandler","session_id","params","logName","defined","paths_to_edfgs","edfgs","algorithmResult","erraticMeasureData","algorithmSliceIndex","map","elem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,MAA7B,QAA2C,MAA3C;AAEA,SACEC,UADF,EAEEC,yBAFF,EAGEC,oBAHF,QAIO,sBAJP;AAKA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAO,MAAMC,SAAS,GAAG,mBACvB;AAAQ,EAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,UAAD,CAAY,KAAZ;AAAkB,EAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADF,eAIE,oBAAC,UAAD,CAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AACxB,QAAMC,yBAAyB,GAAIC,KAAD,IAChCF,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAER,yBADC;AAEPS,IAAAA,OAAO,EAAE;AAAEF,MAAAA;AAAF;AAFF,GAAD,CADV;;AAKA,QAAMG,cAAc,GAAG,YAAY;AACjC,QAAIN,KAAK,CAACO,UAAV,EAAsB;AACpB,YAAMC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAET,KAAK,CAACO,UADF;AAEb,WAAGP,KAAK,CAACU;AAFI,OAAf;AAIA,YAAM;AAAEC,QAAAA,cAAc,EAAEC;AAAlB,UAA4B,MAAMd,QAAQ,CAACU,MAAD,CAAhD;AAEAP,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEP,oBADC;AAEPQ,QAAAA,OAAO,EAAE,EACP,GAAGL,KAAK,CAACa,eADF;AAEPD,UAAAA;AAFO;AAFF,OAAD,CAAR;AAOD;AACF,GAhBD;;AAiBA,MAAI,CAACZ,KAAK,CAACa,eAAX,EAA4B;AAC1B,WAAO,IAAP;AACD;;AAED,QAAM;AACJA,IAAAA,eAAe,EAAE;AAAED,MAAAA,KAAF;AAASE,MAAAA;AAAT,KADb;AAEJC,IAAAA,mBAAmB,GAAG;AAFlB,MAGFf,KAHJ;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEE,yBAAlB;AAA6C,IAAA,YAAY,EAAE,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,kBAAkB,CAACE,GAAnB,CAAuB,CAACC,IAAD,EAAOd,KAAP,kBACtB,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAEA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAsCA,KAAtC,CADD,CADH,CADF,EAOG,EAACS,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAGG,mBAAH,CAAN,kBACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAET,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,CADF;AAaD,CA9CH,CAJF,CADK","sourcesContent":["import React from \"react\";\nimport { Typography, Select, Button } from \"antd\";\n\nimport {\n  AppContext,\n  SET_ALGORITHM_SLICE_INDEX,\n  SET_ALGORITHM_RESULT,\n} from \"./context/appContext\";\nimport { makeEDFG } from \"./apiService\";\n\nexport const AppHeader = () => (\n  <header className=\"App-header\">\n    <Typography.Title level={1}>\n      Visual drift detection for sequence data analysis system\n    </Typography.Title>\n    <AppContext.Consumer>\n      {({ state, dispatch }) => {\n        const selectAlgorithmSliceIndex = (index: number) =>\n          dispatch({\n            type: SET_ALGORITHM_SLICE_INDEX,\n            payload: { index },\n          });\n        const getEdfgHandler = async () => {\n          if (state.session_id) {\n            const params = {\n              logName: state.session_id,\n              ...state.defined,\n            };\n            const { paths_to_edfgs: edfgs } = await makeEDFG(params);\n\n            dispatch({\n              type: SET_ALGORITHM_RESULT,\n              payload: {\n                ...state.algorithmResult,\n                edfgs,\n              },\n            });\n          }\n        };\n        if (!state.algorithmResult) {\n          return null;\n        }\n\n        const {\n          algorithmResult: { edfgs, erraticMeasureData },\n          algorithmSliceIndex = 0,\n        } = state;\n\n        return (\n          <div>\n            <Select onChange={selectAlgorithmSliceIndex} defaultValue={0}>\n              {erraticMeasureData.map((elem, index) => (\n                <Select.Option value={index}>Section {index}</Select.Option>\n              ))}\n            </Select>\n\n            {!edfgs?.[algorithmSliceIndex] && (\n              <Button onClick={getEdfgHandler}>Get EDFG</Button>\n            )}\n          </div>\n        );\n      }}\n    </AppContext.Consumer>\n  </header>\n);\n"]},"metadata":{},"sourceType":"module"}