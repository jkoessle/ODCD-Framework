{"ast":null,"code":"var _jsxFileName = \"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/context/appContext.tsx\";\nimport React, { createContext, useReducer } from \"react\";\nvar ColorTheme;\n\n(function (ColorTheme) {\n  ColorTheme[\"plasma\"] = \"plasma\";\n  ColorTheme[\"bw\"] = \"bw\";\n  ColorTheme[\"PiYG\"] = \"PiYG\";\n})(ColorTheme || (ColorTheme = {}));\n\n;\nvar TypeConstr;\n\n(function (TypeConstr) {\n  TypeConstr[\"plasma\"] = \"confidence\";\n  TypeConstr[\"bw\"] = \"support\";\n  TypeConstr[\"PiYG\"] = \"interestF\";\n})(TypeConstr || (TypeConstr = {}));\n\n;\nexport const AppContext = createContext({\n  state: {},\n  dispatch: () => null\n});\nAppContext.displayName = \"AppContext\";\nexport const SET_SESSION_ACTION = \"SET_SESSION_ACTION\";\nexport const UPDATE_SESSION_ACTION = \"UPDATE_SESSION_ACTION\";\nexport const UPDATE_DEFINED_PARAM_ACTION = \"UPDATE_DEFINED_PARAM_ACTION\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_SESSION_ACTION:\n      {\n        return { ...state,\n          ...action.payload\n        };\n      }\n\n    case UPDATE_DEFINED_PARAM_ACTION:\n      {\n        return { ...state,\n          defined: { ...state.defined,\n            ...action.payload\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst wrappedDispatch = dispatch => action => {\n  console.log('DISPATCH:', action);\n  dispatch(action);\n};\n\nexport const AppContextProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(reducer, {});\n  console.log({\n    state\n  });\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      state,\n      dispatch: wrappedDispatch(dispatch)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/context/appContext.tsx"],"names":["React","createContext","useReducer","ColorTheme","TypeConstr","AppContext","state","dispatch","displayName","SET_SESSION_ACTION","UPDATE_SESSION_ACTION","UPDATE_DEFINED_PARAM_ACTION","reducer","action","type","payload","defined","wrappedDispatch","console","log","AppContextProvider","children"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,aAApB,EAAmCC,UAAnC,QAAqD,OAArD;IAEKC,U;;WAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAIJ;IAEIC,U;;WAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAIJ;AAgCD,OAAO,MAAMC,UAAU,GAAGJ,aAAa,CAGpC;AACDK,EAAAA,KAAK,EAAE,EADN;AAEDC,EAAAA,QAAQ,EAAE,MAAM;AAFf,CAHoC,CAAhC;AAOPF,UAAU,CAACG,WAAX,GAAyB,YAAzB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,2BAA2B,GAAG,6BAApC;;AAEP,MAAMC,OAAO,GAAG,CACdN,KADc,EAEdO,MAFc,KAGO;AACrB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,kBAAL;AAAyB;AACvB,eAAO,EACL,GAAGH,KADE;AAEL,aAAGO,MAAM,CAACE;AAFL,SAAP;AAID;;AAED,SAAKJ,2BAAL;AAAkC;AAChC,eAAO,EACL,GAAGL,KADE;AAELU,UAAAA,OAAO,EAAE,EACP,GAAGV,KAAK,CAACU,OADF;AAEP,eAAGH,MAAM,CAACE;AAFH;AAFJ,SAAP;AAOD;;AAED;AACE,aAAOT,KAAP;AAnBJ;AAqBD,CAzBD;;AA2BA,MAAMW,eAAe,GAAIV,QAAD,IAAoCM,MAAD,IAA0B;AACnFK,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,MAAzB;AACAN,EAAAA,QAAQ,CAACM,MAAD,CAAR;AACD,CAHD;;AAKA,OAAO,MAAMO,kBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtD,QAAM,CAACf,KAAD,EAAQC,QAAR,IAAoBL,UAAU,CAACU,OAAD,EAAU,EAAV,CAApC;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACb,IAAAA;AAAD,GAAZ;AAEA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAF;AAASC,MAAAA,QAAQ,EAAEU,eAAe,CAACV,QAAD;AAAlC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGc,QADH,CADF;AAKD,CAVM","sourcesContent":["import React, { FC, createContext, useReducer } from \"react\";\n\nenum ColorTheme {\n  plasma = \"plasma\",\n  bw = \"bw\",\n  PiYG = \"PiYG\",\n};\n\nenum TypeConstr {\n  plasma = \"confidence\",\n  bw = \"support\",\n  PiYG = \"interestF\",\n};\n\ntype TAppContextState = {\n  session_id?: string;\n  cluCut_default?: number;\n  cluCut_max?: number;\n  cluCut_min?: number;\n  colorTheme?: ColorTheme [];\n  colorTheme_default?: ColorTheme;\n  driftAll?: boolean;\n  noSort?: boolean;\n  sliBy_default?: number;\n  sliBy_max?: number;\n  sliBy_min?: number;\n  subL_default?: number;\n  subL_max?: number;\n  subL_min?: number;\n  typeConstr?: TypeConstr [];\n  typeConstr_default?: TypeConstr;\n  defined?: {\n    cluCut?:number;\n    sliBy?: number;\n    subL?: number;\n    driftAll?: boolean;\n    noSort?: boolean;\n    colorTheme?: ColorTheme;\n    typeConstr?: TypeConstr;\n  }\n}\n\ntype TStoreAction = { type: string; payload: { [key: string]: any } };\n\nexport const AppContext = createContext<{\n  state: TAppContextState;\n  dispatch: React.Dispatch<TStoreAction>;\n}>({\n  state: {},\n  dispatch: () => null,\n});\nAppContext.displayName = \"AppContext\";\n\nexport const SET_SESSION_ACTION = \"SET_SESSION_ACTION\";\nexport const UPDATE_SESSION_ACTION = \"UPDATE_SESSION_ACTION\";\nexport const UPDATE_DEFINED_PARAM_ACTION = \"UPDATE_DEFINED_PARAM_ACTION\";\n\nconst reducer = (\n  state: TAppContextState,\n  action: TStoreAction,\n): TAppContextState => {\n  switch (action.type) {\n    case SET_SESSION_ACTION: {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    }\n\n    case UPDATE_DEFINED_PARAM_ACTION: {\n      return {\n        ...state,\n        defined: {\n          ...state.defined,\n          ...action.payload,\n        }\n      }\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst wrappedDispatch = (dispatch: React.Dispatch<any>) => (action: TStoreAction) => {\n  console.log('DISPATCH:', action);\n  dispatch(action);\n};\n\nexport const AppContextProvider: FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, {});\n\n  console.log({state})\n  \n  return (\n    <AppContext.Provider value={{ state, dispatch: wrappedDispatch(dispatch) }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}