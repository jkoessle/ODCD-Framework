{"ast":null,"code":"import React,{useContext}from\"react\";import{Row,Col,Typography}from\"antd\";import{API_URL}from\"../../apiService\";import{AppContext}from\"../../context/appContext\";import{ErraticMeasureSlider}from\"./ErraticMeasureSlider\";import{SpreadConstraintsSlider}from\"./SpreadConstraintsSlider\";import\"./styles.css\";export var AlgorithmResultComponent=function AlgorithmResultComponent(){var _state$algorithmResul,_stationarityTestResu;var _useContext=useContext(AppContext),state=_useContext.state;if(!((_state$algorithmResul=state.algorithmResult)===null||_state$algorithmResul===void 0?void 0:_state$algorithmResul.path_to_driftmap)){return null;}var _state$algorithmResul2=state.algorithmResult,path_to_driftmap=_state$algorithmResul2.path_to_driftmap,_state$algorithmResul3=_state$algorithmResul2.erraticMeasureData,erraticMeasureData=_state$algorithmResul3===void 0?[]:_state$algorithmResul3,_state$algorithmResul4=_state$algorithmResul2.paths_to_drift_plots,paths_to_drift_plots=_state$algorithmResul4===void 0?[]:_state$algorithmResul4,spread_constraints=_state$algorithmResul2.spread_constraints,stationarityTestResult=_state$algorithmResul2.stationarityTestResult,autocorrelationPlots=_state$algorithmResul2.autocorrelationPlots,edfgs=_state$algorithmResul2.edfgs,_state$algorithmSlice=state.algorithmSliceIndex,algorithmSliceIndex=_state$algorithmSlice===void 0?0:_state$algorithmSlice;console.log({edfgs:edfgs});var pValue=(_stationarityTestResu=stationarityTestResult[algorithmSliceIndex])===null||_stationarityTestResu===void 0?void 0:_stationarityTestResu[2];var pValueText=pValue>0.05?\"Incremental drift present, p = \".concat(pValue):\"No incremental drift, p = \".concat(pValue);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{span:10},/*#__PURE__*/React.createElement(\"img\",{src:\"\".concat(API_URL).concat(path_to_driftmap),alt:\"Drift map\",className:\"image\"})),/*#__PURE__*/React.createElement(Col,{span:8},/*#__PURE__*/React.createElement(\"img\",{className:\"image\",src:\"\".concat(API_URL).concat(paths_to_drift_plots[algorithmSliceIndex]),alt:\"drift plot\"})),/*#__PURE__*/React.createElement(Col,{span:5,offset:1},/*#__PURE__*/React.createElement(\"img\",{src:\"\".concat(API_URL).concat(autocorrelationPlots[algorithmSliceIndex]),alt:\"autocorrelation plots\",className:\"image\"}),/*#__PURE__*/React.createElement(Typography.Text,null,\"Erratic measure\"),/*#__PURE__*/React.createElement(ErraticMeasureSlider,{selected:algorithmSliceIndex,data:erraticMeasureData}),/*#__PURE__*/React.createElement(Typography.Text,null,\"Spread of constraints\"),/*#__PURE__*/React.createElement(SpreadConstraintsSlider,{value:spread_constraints}),/*#__PURE__*/React.createElement(Typography.Paragraph,null,pValueText))),/*#__PURE__*/React.createElement(Row,null,(edfgs===null||edfgs===void 0?void 0:edfgs[algorithmSliceIndex])&&/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(\"img\",{src:\"\".concat(API_URL).concat(edfgs[algorithmSliceIndex]),alt:\"EDGF\",className:\"image\"}))));};","map":{"version":3,"sources":["/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/components/AlgorithmResultComponent/index.tsx"],"names":["React","useContext","Row","Col","Typography","API_URL","AppContext","ErraticMeasureSlider","SpreadConstraintsSlider","AlgorithmResultComponent","state","algorithmResult","path_to_driftmap","erraticMeasureData","paths_to_drift_plots","spread_constraints","stationarityTestResult","autocorrelationPlots","edfgs","algorithmSliceIndex","console","log","pValue","pValueText"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAoBC,UAApB,KAAsC,OAAtC,CAEA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,UAAnB,KAAqC,MAArC,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,OACEC,UADF,KAIO,0BAJP,CAMA,OAASC,oBAAT,KAAqC,wBAArC,CACA,OAASC,uBAAT,KAAwC,2BAAxC,CACA,MAAO,cAAP,CAEA,MAAO,IAAMC,CAAAA,wBAA4B,CAAG,QAA/BA,CAAAA,wBAA+B,EAAM,iEAC9BR,UAAU,CAGzBK,UAHyB,CADoB,CACxCI,KADwC,aACxCA,KADwC,CAKhD,GAAI,yBAACA,KAAK,CAACC,eAAP,gDAAC,sBAAuBC,gBAAxB,CAAJ,CAA8C,CAC5C,MAAO,KAAP,CACD,CAP+C,2BAoB5CF,KApB4C,CAU9CC,eAV8C,CAW5CC,gBAX4C,wBAW5CA,gBAX4C,+CAY5CC,kBAZ4C,CAY5CA,kBAZ4C,iCAYvB,EAZuB,sEAa5CC,oBAb4C,CAa5CA,oBAb4C,iCAarB,EAbqB,wBAc5CC,kBAd4C,wBAc5CA,kBAd4C,CAe5CC,sBAf4C,wBAe5CA,sBAf4C,CAgB5CC,oBAhB4C,wBAgB5CA,oBAhB4C,CAiB5CC,KAjB4C,wBAiB5CA,KAjB4C,uBAoB5CR,KApB4C,CAmB9CS,mBAnB8C,CAmB9CA,mBAnB8C,gCAmBxB,CAnBwB,uBAsBhDC,OAAO,CAACC,GAAR,CAAY,CAAEH,KAAK,CAALA,KAAF,CAAZ,EAEA,GAAMI,CAAAA,MAAc,wBAAGN,sBAAsB,CAACG,mBAAD,CAAzB,gDAAG,sBAA8C,CAA9C,CAAvB,CACA,GAAMI,CAAAA,UAAkB,CACtBD,MAAM,CAAG,IAAT,0CACsCA,MADtC,sCAEiCA,MAFjC,CADF,CAKA,mBACE,4CACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,IAAI,CAAE,EAAX,eACE,2BACE,GAAG,WAAKjB,OAAL,SAAeO,gBAAf,CADL,CAEE,GAAG,CAAC,WAFN,CAGE,SAAS,CAAC,OAHZ,EADF,CADF,cAQE,oBAAC,GAAD,EAAK,IAAI,CAAE,CAAX,eACE,2BACE,SAAS,CAAC,OADZ,CAEE,GAAG,WAAKP,OAAL,SAAeS,oBAAoB,CAACK,mBAAD,CAAnC,CAFL,CAGE,GAAG,CAAC,YAHN,EADF,CARF,cAeE,oBAAC,GAAD,EAAK,IAAI,CAAE,CAAX,CAAc,MAAM,CAAE,CAAtB,eACE,2BACE,GAAG,WAAKd,OAAL,SAAeY,oBAAoB,CAACE,mBAAD,CAAnC,CADL,CAEE,GAAG,CAAC,uBAFN,CAGE,SAAS,CAAC,OAHZ,EADF,cAME,oBAAC,UAAD,CAAY,IAAZ,wBANF,cAOE,oBAAC,oBAAD,EACE,QAAQ,CAAEA,mBADZ,CAEE,IAAI,CAAEN,kBAFR,EAPF,cAWE,oBAAC,UAAD,CAAY,IAAZ,8BAXF,cAYE,oBAAC,uBAAD,EAAyB,KAAK,CAAEE,kBAAhC,EAZF,cAaE,oBAAC,UAAD,CAAY,SAAZ,MAAuBQ,UAAvB,CAbF,CAfF,CADF,cAgCE,oBAAC,GAAD,MACG,CAAAL,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAGC,mBAAH,CAAL,gBACC,oBAAC,GAAD,EAAK,IAAI,CAAE,EAAX,eACE,2BACE,GAAG,WAAKd,OAAL,SAAea,KAAK,CAACC,mBAAD,CAApB,CADL,CAEE,GAAG,CAAC,MAFN,CAGE,SAAS,CAAC,OAHZ,EADF,CAFJ,CAhCF,CADF,CA8CD,CA5EM","sourcesContent":["import React, { FC, useContext } from \"react\";\n\nimport { Row, Col, Typography } from \"antd\";\nimport { API_URL } from \"../../apiService\";\nimport {\n  AppContext,\n  TAppContextState,\n  TDispatchType,\n} from \"../../context/appContext\";\n\nimport { ErraticMeasureSlider } from \"./ErraticMeasureSlider\";\nimport { SpreadConstraintsSlider } from \"./SpreadConstraintsSlider\";\nimport \"./styles.css\";\n\nexport const AlgorithmResultComponent: FC = () => {\n  const { state } = useContext<{\n    state: TAppContextState;\n    dispatch: TDispatchType;\n  }>(AppContext);\n  if (!state.algorithmResult?.path_to_driftmap) {\n    return null;\n  }\n\n  const {\n    algorithmResult: {\n      path_to_driftmap,\n      erraticMeasureData = [],\n      paths_to_drift_plots = [],\n      spread_constraints,\n      stationarityTestResult,\n      autocorrelationPlots,\n      edfgs,\n    },\n    algorithmSliceIndex = 0,\n  } = state;\n\n  console.log({ edfgs });\n\n  const pValue: number = stationarityTestResult[algorithmSliceIndex]?.[2];\n  const pValueText: string =\n    pValue > 0.05\n      ? `Incremental drift present, p = ${pValue}`\n      : `No incremental drift, p = ${pValue}`;\n\n  return (\n    <div>\n      <Row>\n        <Col span={10}>\n          <img\n            src={`${API_URL}${path_to_driftmap}`}\n            alt=\"Drift map\"\n            className=\"image\"\n          />\n        </Col>\n        <Col span={8}>\n          <img\n            className=\"image\"\n            src={`${API_URL}${paths_to_drift_plots[algorithmSliceIndex]}`}\n            alt=\"drift plot\"\n          />\n        </Col>\n        <Col span={5} offset={1}>\n          <img\n            src={`${API_URL}${autocorrelationPlots[algorithmSliceIndex]}`}\n            alt=\"autocorrelation plots\"\n            className=\"image\"\n          />\n          <Typography.Text>Erratic measure</Typography.Text>\n          <ErraticMeasureSlider\n            selected={algorithmSliceIndex}\n            data={erraticMeasureData}\n          />\n          <Typography.Text>Spread of constraints</Typography.Text>\n          <SpreadConstraintsSlider value={spread_constraints} />\n          <Typography.Paragraph>{pValueText}</Typography.Paragraph>\n        </Col>\n      </Row>\n      <Row>\n        {edfgs?.[algorithmSliceIndex] && (\n          <Col span={24}>\n            <img\n              src={`${API_URL}${edfgs[algorithmSliceIndex]}`}\n              alt=\"EDGF\"\n              className=\"image\"\n            />\n          </Col>\n        )}\n      </Row>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}