{"ast":null,"code":"var _jsxFileName = \"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/components/AlgorithmResultComponent/index.tsx\";\nimport React, { useContext } from \"react\";\nimport { Row, Col, Typography } from \"antd\";\nimport { API_URL } from \"../../apiService\";\nimport { AppContext } from \"../../context/appContext\";\nimport { ErraticMeasureSlider } from \"./ErraticMeasureSlider\";\nimport { SpreadConstraintsSlider } from \"./SpreadConstraintsSlider\";\nimport './styles.css';\nexport const AlgorithmResultComponent = () => {\n  var _state$algorithmResul, _stationarityTestResu;\n\n  const {\n    state\n  } = useContext(AppContext);\n\n  if (!((_state$algorithmResul = state.algorithmResult) === null || _state$algorithmResul === void 0 ? void 0 : _state$algorithmResul.path_to_driftmap)) {\n    return null;\n  }\n\n  const {\n    algorithmResult: {\n      path_to_driftmap,\n      erraticMeasureData = [],\n      paths_to_drift_plots = [],\n      spread_constraints,\n      stationarityTestResult,\n      autocorrelationPlots,\n      edfgs\n    },\n    algorithmSliceIndex = 0\n  } = state;\n  console.log({\n    edfgs\n  });\n  const pValue = (_stationarityTestResu = stationarityTestResult[algorithmSliceIndex]) === null || _stationarityTestResu === void 0 ? void 0 : _stationarityTestResu[2];\n  const pValueText = pValue > 0.05 ? `Incremental drift present, p = ${pValue}` : `No incremental drift, p = ${pValue}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `${API_URL}${path_to_driftmap}`,\n    alt: \"Drift map\",\n    className: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"image\",\n    src: `${API_URL}${paths_to_drift_plots[algorithmSliceIndex]}`,\n    alt: \"drift plot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 4,\n    offset: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography.Title, {\n    level: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Erratic measure\"), /*#__PURE__*/React.createElement(ErraticMeasureSlider, {\n    selected: algorithmSliceIndex,\n    data: erraticMeasureData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography.Title, {\n    level: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Spread of constraints\"), /*#__PURE__*/React.createElement(SpreadConstraintsSlider, {\n    value: spread_constraints,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography.Title, {\n    level: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, pValueText)), (edfgs === null || edfgs === void 0 ? void 0 : edfgs[algorithmSliceIndex]) &&\n  /*#__PURE__*/\n  // <Row>\n  React.createElement(Col, {\n    span: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `${API_URL}${edfgs[algorithmSliceIndex]}`,\n    alt: \"EDGF\",\n    className: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  })) // </Row>\n  ), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 4,\n    offset: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `${API_URL}${autocorrelationPlots[algorithmSliceIndex]}`,\n    alt: \"autocorrelation plots\",\n    className: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/components/AlgorithmResultComponent/index.tsx"],"names":["React","useContext","Row","Col","Typography","API_URL","AppContext","ErraticMeasureSlider","SpreadConstraintsSlider","AlgorithmResultComponent","state","algorithmResult","path_to_driftmap","erraticMeasureData","paths_to_drift_plots","spread_constraints","stationarityTestResult","autocorrelationPlots","edfgs","algorithmSliceIndex","console","log","pValue","pValueText"],"mappings":"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","sourcesContent":["import React, { FC, useContext } from \"react\";\n\nimport {  Row, Col, Typography } from \"antd\";\nimport { API_URL } from \"../../apiService\";\nimport {\n  AppContext,\n  TAppContextState,\n  TDispatchType,\n} from \"../../context/appContext\";\n\nimport { ErraticMeasureSlider } from \"./ErraticMeasureSlider\";\nimport { SpreadConstraintsSlider } from \"./SpreadConstraintsSlider\";\nimport './styles.css';\n\nexport const AlgorithmResultComponent: FC = () => {\n  const { state } = useContext<{\n    state: TAppContextState;\n    dispatch: TDispatchType;\n  }>(AppContext);\n  if (!state.algorithmResult?.path_to_driftmap) {\n    return null;\n  }\n\n  const {\n    algorithmResult: {\n      path_to_driftmap,\n      erraticMeasureData = [],\n      paths_to_drift_plots = [],\n      spread_constraints,\n      stationarityTestResult,\n      autocorrelationPlots,\n      edfgs,\n    },\n    algorithmSliceIndex = 0,\n  } = state;\n\n  console.log({ edfgs });\n\n  const pValue: number = stationarityTestResult[algorithmSliceIndex]?.[2];\n  const pValueText: string =\n    pValue > 0.05\n      ? `Incremental drift present, p = ${pValue}`\n      : `No incremental drift, p = ${pValue}`;\n\n  return (\n    <div>\n      <Row>\n        <Col span={14}>\n          <img src={`${API_URL}${path_to_driftmap}`} alt=\"Drift map\" className=\"image\"/>\n        </Col>\n        <Col span={10}>\n          <img\n            className=\"image\"\n            src={`${API_URL}${paths_to_drift_plots[algorithmSliceIndex]}`}\n            alt=\"drift plot\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={4} offset={3}>\n          <Typography.Title level={3}>Erratic measure</Typography.Title>\n          <ErraticMeasureSlider\n            selected={algorithmSliceIndex}\n            data={erraticMeasureData}\n          />\n          <Typography.Title level={3}>Spread of constraints</Typography.Title>\n          <SpreadConstraintsSlider value={spread_constraints} />\n          <Typography.Title level={3}>{pValueText}</Typography.Title>\n        </Col>\n        {edfgs?.[algorithmSliceIndex] && (\n        // <Row>\n          <Col span={16}>\n            <img src={`${API_URL}${edfgs[algorithmSliceIndex]}`} alt=\"EDGF\" className=\"image\"/>\n          </Col>\n        // </Row>\n      )}\n        </Row>\n        <Row>\n        <Col span={4} offset={3}>\n          <img\n            src={`${API_URL}${autocorrelationPlots[algorithmSliceIndex]}`}\n            alt=\"autocorrelation plots\"\n            className=\"image\"\n          />\n        </Col>\n      </Row>\n      \n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}