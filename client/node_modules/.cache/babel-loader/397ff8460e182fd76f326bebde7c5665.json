{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from\"react\";import{Upload,Button,Empty,Typography}from\"antd\";import{UploadOutlined}from\"@ant-design/icons\";import{uploadFile}from\"../../apiService\";import{AppContext,SET_SESSION_ACTION}from\"../../context/appContext\";import\"./Upload.css\";export var UploadComponent=function UploadComponent(){var _useContext=useContext(AppContext),dispatch=_useContext.dispatch,state=_useContext.state;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];if(state.session_id){return null;}var handleSubmitForm=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var file,onSuccess,onError,formData,_response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:file=_ref.file,onSuccess=_ref.onSuccess,onError=_ref.onError;if(!file){_context.next=18;break;}setLoading(true);formData=new FormData();formData.append(\"file\",file);_context.prev=5;_context.next=8;return uploadFile(formData);case 8:_response=_context.sent;dispatch({type:SET_SESSION_ACTION,payload:_response});onSuccess(_response,file);_context.next=17;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](5);console.log(_context.t0);onError(_context.t0);case 17:setLoading(false);case 18:case\"end\":return _context.stop();}}},_callee,null,[[5,13]]);}));return function handleSubmitForm(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"Upload-area\"},/*#__PURE__*/React.createElement(Empty,{description:/*#__PURE__*/React.createElement(Typography.Title,{level:2},\"The technique that supports the discovery of process drifts!\"),image:Empty.PRESENTED_IMAGE_SIMPLE},/*#__PURE__*/React.createElement(Upload,{accept:\".xes\",name:\"file\",customRequest:handleSubmitForm},/*#__PURE__*/React.createElement(Button,{loading:loading,size:\"large\"},/*#__PURE__*/React.createElement(UploadOutlined,null),\" Click to upload a \",/*#__PURE__*/React.createElement(\"b\",null,\" .xes \"),\" file\"))));};","map":{"version":3,"sources":["/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/components/UploadComponent/index.tsx"],"names":["React","useState","useContext","Upload","Button","Empty","Typography","UploadOutlined","uploadFile","AppContext","SET_SESSION_ACTION","UploadComponent","dispatch","state","loading","setLoading","session_id","handleSubmitForm","file","onSuccess","onError","formData","FormData","append","response","type","payload","console","log","PRESENTED_IMAGE_SIMPLE"],"mappings":"2lBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,OAASC,MAAT,CAAiBC,MAAjB,CAAyBC,KAAzB,CAAgCC,UAAhC,KAAkD,MAAlD,CACA,OAASC,cAAT,KAA+B,mBAA/B,CAEA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,UAAT,CAAqBC,kBAArB,KAA+C,0BAA/C,CACA,MAAO,cAAP,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,iBACPT,UAAU,CAACO,UAAD,CADH,CAC3BG,QAD2B,aAC3BA,QAD2B,CACjBC,KADiB,aACjBA,KADiB,eAELZ,QAAQ,CAAU,KAAV,CAFH,wCAE5Ba,OAF4B,eAEnBC,UAFmB,eAInC,GAAIF,KAAK,CAACG,UAAV,CAAsB,CACpB,MAAO,KAAP,CACD,CAED,GAAMC,CAAAA,gBAAgB,2FAAG,qLACvBC,IADuB,MACvBA,IADuB,CAEvBC,SAFuB,MAEvBA,SAFuB,CAGvBC,OAHuB,MAGvBA,OAHuB,KASnBF,IATmB,0BAUrBH,UAAU,CAAC,IAAD,CAAV,CACMM,QAXe,CAWJ,GAAIC,CAAAA,QAAJ,EAXI,CAYrBD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,CAAwBL,IAAxB,EAZqB,sCAcIV,CAAAA,UAAU,CAACa,QAAD,CAdd,QAcbG,SAda,eAenBZ,QAAQ,CAAC,CAAEa,IAAI,CAAEf,kBAAR,CAA4BgB,OAAO,CAAEF,SAArC,CAAD,CAAR,CACAL,SAAS,CAACK,SAAD,CAAWN,IAAX,CAAT,CAhBmB,iFAkBnBS,OAAO,CAACC,GAAR,cACAR,OAAO,aAAP,CAnBmB,QAqBrBL,UAAU,CAAC,KAAD,CAAV,CArBqB,qEAAH,kBAAhBE,CAAAA,gBAAgB,6CAAtB,CAyBA,mBACE,2BAAK,SAAS,CAAC,aAAf,eACE,oBAAC,KAAD,EACE,WAAW,cACT,oBAAC,UAAD,CAAY,KAAZ,EAAkB,KAAK,CAAE,CAAzB,iEAFJ,CAIE,KAAK,CAAEZ,KAAK,CAACwB,sBAJf,eAME,oBAAC,MAAD,EAAQ,MAAM,CAAC,MAAf,CAAsB,IAAI,CAAC,MAA3B,CAAkC,aAAa,CAAEZ,gBAAjD,eACE,oBAAC,MAAD,EAAQ,OAAO,CAAEH,OAAjB,CAA0B,IAAI,CAAC,OAA/B,eACE,oBAAC,cAAD,MADF,oCACuC,sCADvC,SADF,CANF,CADF,CADF,CAgBD,CAjDM","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Upload, Button, Empty, Typography } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nimport { uploadFile } from \"../../apiService\";\nimport { AppContext, SET_SESSION_ACTION } from \"../../context/appContext\";\nimport \"./Upload.css\";\n\nexport const UploadComponent = () => {\n  const { dispatch, state } = useContext(AppContext);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  if (state.session_id) {\n    return null;\n  }\n\n  const handleSubmitForm = async ({\n    file,\n    onSuccess,\n    onError,\n  }: {\n    file: File;\n    onSuccess: (response: object, file: File) => void;\n    onError: (event: Error, body?: Object) => void;\n  }) => {\n    if (file) {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      try {\n        const response = await uploadFile(formData);\n        dispatch({ type: SET_SESSION_ACTION, payload: response });\n        onSuccess(response, file);\n      } catch (error) {\n        console.log(error);\n        onError(error);\n      }\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"Upload-area\">\n      <Empty\n        description={\n          <Typography.Title level={2}>The technique that supports the discovery of process drifts!</Typography.Title>\n        }\n        image={Empty.PRESENTED_IMAGE_SIMPLE}\n      >\n        <Upload accept=\".xes\" name=\"file\" customRequest={handleSubmitForm}>\n          <Button loading={loading} size=\"large\">\n            <UploadOutlined /> Click to upload a <b> .xes </b> file\n          </Button>\n        </Upload>\n      </Empty>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}