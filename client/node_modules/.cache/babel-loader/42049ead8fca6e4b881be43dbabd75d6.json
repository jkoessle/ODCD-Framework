{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{useContext,useState}from\"react\";import{Slider,Col,Checkbox,Radio,Button,Divider,Row,Tooltip,Layout}from\"antd\";import{QuestionCircleOutlined,SettingTwoTone}from\"@ant-design/icons\";import{AppContext,UPDATE_DEFINED_PARAM_ACTION,SET_ALGORITHM_RESULT}from\"../../context/appContext\";import{makeDriftMap,parseErraticMeasureCsv,makeSpreadOfConstraints,makeStationarityTest,makeAutocorrelationPlots}from\"../../apiService\";var getDefaultMark=function getDefaultMark(){var defaultValue=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;return _defineProperty({},defaultValue,defaultValue);};export var ToolsComponent=function ToolsComponent(){var _state$defined,_state$colorTheme,_state$defined2,_state$typeConstr,_state$defined$driftA,_state$defined3,_state$defined$noSort,_state$defined4;var _useContext=useContext(AppContext),state=_useContext.state,dispatch=_useContext.dispatch;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),collapsed=_useState4[0],toggleSider=_useState4[1];if(!state.session_id){return null;}var onAfterChangeSlider=function onAfterChangeSlider(key){return function(value){dispatch({type:UPDATE_DEFINED_PARAM_ACTION,payload:_defineProperty({},key,value)});};};var onCheckboxChange=function onCheckboxChange(key){return function(event){dispatch({type:UPDATE_DEFINED_PARAM_ACTION,payload:_defineProperty({},key,event.target.checked)});};};var onRadioChange=function onRadioChange(key){return function(event){dispatch({type:UPDATE_DEFINED_PARAM_ACTION,payload:_defineProperty({},key,event.target.value)});};};var onStartAlgorithm=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var params,algorithmResult,_yield$makeSpreadOfCo,spread_constraints,stationarityTestResult,erraticMeasureData,_yield$makeAutocorrel,autocorrelationPlots;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!state.session_id){_context.next=30;break;}setLoading(true);_context.prev=2;params=_objectSpread({logName:state.session_id},state.defined);_context.next=6;return makeDriftMap(params);case 6:algorithmResult=_context.sent;_context.next=9;return makeSpreadOfConstraints(params);case 9:_yield$makeSpreadOfCo=_context.sent;spread_constraints=_yield$makeSpreadOfCo.spread_constraints;_context.next=13;return makeStationarityTest(params);case 13:stationarityTestResult=_context.sent;_context.next=16;return parseErraticMeasureCsv(algorithmResult.path_to_erratic_measure);case 16:erraticMeasureData=_context.sent;_context.next=19;return makeAutocorrelationPlots(params);case 19:_yield$makeAutocorrel=_context.sent;autocorrelationPlots=_yield$makeAutocorrel.paths_to_autocorrelation;dispatch({type:SET_ALGORITHM_RESULT,payload:_objectSpread(_objectSpread({},algorithmResult),{},{erraticMeasureData:erraticMeasureData,spread_constraints:spread_constraints,stationarityTestResult:stationarityTestResult,autocorrelationPlots:autocorrelationPlots})});_context.next=27;break;case 24:_context.prev=24;_context.t0=_context[\"catch\"](2);console.error(_context.t0);case 27:_context.prev=27;setLoading(false);return _context.finish(27);case 30:case\"end\":return _context.stop();}}},_callee,null,[[2,24,27,30]]);}));return function onStartAlgorithm(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(Layout.Sider,{collapsible:true,collapsed:collapsed,onCollapse:toggleSider,width:350,className:\"App-sider\"},collapsed&&/*#__PURE__*/React.createElement(SettingTwoTone,{style:{width:'50px',height:'50px'}}),/*#__PURE__*/React.createElement(\"div\",{style:{opacity:collapsed?0:1,pointerEvents:collapsed?\"none\":\"inherit\"}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Tooltip,{title:\"the size of the sliding window for mining declare constraints\",color:\"green\"},/*#__PURE__*/React.createElement(Divider,null,\"Win size\",\" \",/*#__PURE__*/React.createElement(\"sup\",null,/*#__PURE__*/React.createElement(QuestionCircleOutlined,null))))),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Slider,{min:state.subL_min,max:state.subL_max,defaultValue:state.subL_default,marks:getDefaultMark(state.subL_default),onAfterChange:onAfterChangeSlider(\"subL\")}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Tooltip,{title:\"this parameter sets the number of event sequences will be skipped with each new window. this number shouldn't be larger than the Win size\",color:\"pink\",key:\"?\"},/*#__PURE__*/React.createElement(Divider,null,\"Slide Size\",/*#__PURE__*/React.createElement(\"sup\",null,/*#__PURE__*/React.createElement(QuestionCircleOutlined,null))))),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Slider,{min:state.sliBy_min,max:state.sliBy_max,defaultValue:state.sliBy_default,marks:getDefaultMark(state.sliBy_default),onAfterChange:onAfterChangeSlider(\"sliBy\")}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Tooltip,{title:\"this parameter affects the hierarchical clustering algorithm to determine the number of clusters,  and there fore number of changing behaviours. the larger the number the less clusters will be found \",color:\"orange\",key:\"?\"},/*#__PURE__*/React.createElement(Divider,null,\"Cut Threshold\",\" \",/*#__PURE__*/React.createElement(\"sup\",null,/*#__PURE__*/React.createElement(QuestionCircleOutlined,null))))),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Slider,{min:state.cluCut_min,max:state.cluCut_max,defaultValue:state.cluCut_default,marks:getDefaultMark(state.cluCut_default),onAfterChange:onAfterChangeSlider(\"cluCut\")}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Tooltip,{title:\"choose the color scheme for the Drift Map visualizatoin. All of the options should be colorblind friendly. Read more about color schemas at https://matplotlib.org/examples/color/colormaps_reference.html\",color:\"volcano\",key:\"?\"},/*#__PURE__*/React.createElement(Divider,null,\"Color scheme\",\" \",/*#__PURE__*/React.createElement(\"sup\",null,/*#__PURE__*/React.createElement(QuestionCircleOutlined,null))))),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Radio.Group,{defaultValue:((_state$defined=state.defined)===null||_state$defined===void 0?void 0:_state$defined.colorTheme)||state.colorTheme_default,onChange:onRadioChange(\"colorTheme\")},(_state$colorTheme=state.colorTheme)===null||_state$colorTheme===void 0?void 0:_state$colorTheme.map(function(theme){return/*#__PURE__*/React.createElement(Radio,{value:theme,key:theme},theme);})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Tooltip,{title:\"Choose between three types of measures on Declare constraints\",color:\"lime\",key:\"?\"},/*#__PURE__*/React.createElement(Divider,null,\"Type of constraint\",\" \",/*#__PURE__*/React.createElement(\"sup\",null,/*#__PURE__*/React.createElement(QuestionCircleOutlined,null))))),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Radio.Group,{defaultValue:((_state$defined2=state.defined)===null||_state$defined2===void 0?void 0:_state$defined2.typeConstr)||state.typeConstr_default,onChange:onRadioChange(\"typeConstr\")},(_state$typeConstr=state.typeConstr)===null||_state$typeConstr===void 0?void 0:_state$typeConstr.map(function(type){return/*#__PURE__*/React.createElement(Radio,{value:type,key:type},type);})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Divider,null,\"Additional parameters\")),/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Tooltip,{title:\"Click in driftAll if you want find sudden drifts in all separate clusters of behaviour. Leave it if you want to find sudden drifts on the whole dataset.\",color:\"geekblue\",key:\"?\"},/*#__PURE__*/React.createElement(Checkbox,{checked:(_state$defined$driftA=(_state$defined3=state.defined)===null||_state$defined3===void 0?void 0:_state$defined3.driftAll)!==null&&_state$defined$driftA!==void 0?_state$defined$driftA:state.driftAll,onChange:onCheckboxChange(\"driftAll\")},\"drift all\",\" \",/*#__PURE__*/React.createElement(\"sup\",null,/*#__PURE__*/React.createElement(QuestionCircleOutlined,null)))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Tooltip,{title:\"Click in noSort if you do not want to sort constrants in clusters by similarity for the drift map. This only influences the visul representation\",color:\"geekblue\",key:\"?\"},/*#__PURE__*/React.createElement(Checkbox,{checked:(_state$defined$noSort=(_state$defined4=state.defined)===null||_state$defined4===void 0?void 0:_state$defined4.noSort)!==null&&_state$defined$noSort!==void 0?_state$defined$noSort:state.noSort,onChange:onCheckboxChange(\"noSort\")},\"no sort\",\" \",/*#__PURE__*/React.createElement(\"sup\",null,/*#__PURE__*/React.createElement(QuestionCircleOutlined,null)))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{span:24},/*#__PURE__*/React.createElement(Button,{loading:loading,onClick:onStartAlgorithm,style:{margin:\"20px 0\"}},\"Start algorithm\")))));};","map":{"version":3,"sources":["/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/components/ToolsComponent/index.tsx"],"names":["React","useContext","useState","Slider","Col","Checkbox","Radio","Button","Divider","Row","Tooltip","Layout","QuestionCircleOutlined","SettingTwoTone","AppContext","UPDATE_DEFINED_PARAM_ACTION","SET_ALGORITHM_RESULT","makeDriftMap","parseErraticMeasureCsv","makeSpreadOfConstraints","makeStationarityTest","makeAutocorrelationPlots","getDefaultMark","defaultValue","ToolsComponent","state","dispatch","loading","setLoading","collapsed","toggleSider","session_id","onAfterChangeSlider","key","value","type","payload","onCheckboxChange","event","target","checked","onRadioChange","onStartAlgorithm","params","logName","defined","algorithmResult","spread_constraints","stationarityTestResult","path_to_erratic_measure","erraticMeasureData","autocorrelationPlots","paths_to_autocorrelation","console","error","width","height","opacity","pointerEvents","subL_min","subL_max","subL_default","sliBy_min","sliBy_max","sliBy_default","cluCut_min","cluCut_max","cluCut_default","colorTheme","colorTheme_default","map","theme","typeConstr","typeConstr_default","driftAll","noSort","margin"],"mappings":"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","sourcesContent":["import React, { FC, useContext, useState } from \"react\";\nimport {\n  Slider,\n  Col,\n  Checkbox,\n  Radio,\n  Button,\n  Divider,\n  Row,\n  Tooltip,\n  Layout,\n} from \"antd\";\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\nimport { SliderValue } from \"antd/lib/slider\";\nimport { RadioChangeEvent } from \"antd/lib/radio\";\nimport { QuestionCircleOutlined, SettingTwoTone } from \"@ant-design/icons\";\nimport {\n  AppContext,\n  UPDATE_DEFINED_PARAM_ACTION,\n  SET_ALGORITHM_RESULT,\n} from \"../../context/appContext\";\n\nimport {\n  makeDriftMap,\n  parseErraticMeasureCsv,\n  makeSpreadOfConstraints,\n  makeStationarityTest,\n  makeAutocorrelationPlots,\n} from \"../../apiService\";\n\nconst getDefaultMark = (defaultValue: number = 0) => ({\n  [defaultValue]: defaultValue,\n});\n\nexport const ToolsComponent: FC = () => {\n  const { state, dispatch } = useContext(AppContext);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [collapsed, toggleSider] = useState<boolean>(false);\n\n  if (!state.session_id) {\n    return null;\n  }\n\n  const onAfterChangeSlider = (key: string) => (value: SliderValue) => {\n    dispatch({ type: UPDATE_DEFINED_PARAM_ACTION, payload: { [key]: value } });\n  };\n\n  const onCheckboxChange = (key: string) => (event: CheckboxChangeEvent) => {\n    dispatch({\n      type: UPDATE_DEFINED_PARAM_ACTION,\n      payload: { [key]: event.target.checked },\n    });\n  };\n\n  const onRadioChange = (key: string) => (event: RadioChangeEvent) => {\n    dispatch({\n      type: UPDATE_DEFINED_PARAM_ACTION,\n      payload: { [key]: event.target.value },\n    });\n  };\n\n  const onStartAlgorithm = async () => {\n    if (state.session_id) {\n      setLoading(true);\n      try {\n        const params = { logName: state.session_id, ...state.defined };\n        const algorithmResult = await makeDriftMap(params);\n        const { spread_constraints } = await makeSpreadOfConstraints(params);\n        const stationarityTestResult = await makeStationarityTest(params);\n        const erraticMeasureData = await parseErraticMeasureCsv(\n          algorithmResult.path_to_erratic_measure\n        );\n        const {\n          paths_to_autocorrelation: autocorrelationPlots,\n        } = await makeAutocorrelationPlots(params);\n\n        dispatch({\n          type: SET_ALGORITHM_RESULT,\n          payload: {\n            ...algorithmResult,\n            erraticMeasureData,\n            spread_constraints,\n            stationarityTestResult,\n            autocorrelationPlots,\n          },\n        });\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <Layout.Sider\n      collapsible\n      collapsed={collapsed}\n      onCollapse={toggleSider}\n      width={350}\n      className=\"App-sider\"\n    >\n      {collapsed && <SettingTwoTone style={{width: '50px', height: '50px'}}/>}\n      <div\n        style={{\n          opacity: collapsed ? 0 : 1,\n          pointerEvents: collapsed ? \"none\" : \"inherit\",\n        }}\n      >\n        <Row>\n          {/* <Tooltip title=\"Win size\" color=\"pink\"> */}\n          <Col span={24}>\n            <Tooltip\n              title=\"the size of the sliding window for mining declare constraints\"\n              color={\"green\"}\n            >\n              <Divider>\n                Win size{\" \"}\n                <sup>\n                  <QuestionCircleOutlined />\n                </sup>\n              </Divider>\n            </Tooltip>\n          </Col>\n          <Col span={24}>\n            <Slider\n              min={state.subL_min}\n              max={state.subL_max}\n              defaultValue={state.subL_default}\n              marks={getDefaultMark(state.subL_default)}\n              onAfterChange={onAfterChangeSlider(\"subL\")}\n            />\n          </Col>\n          {/* </Tooltip> */}\n        </Row>\n        <Row>\n          <Col span={24}>\n            <Tooltip\n              title=\"this parameter sets the number of event sequences will be skipped with each new window. this number shouldn't be larger than the Win size\"\n              color={\"pink\"}\n              key={\"?\"}\n            >\n              <Divider>\n                Slide Size\n                <sup>\n                  <QuestionCircleOutlined />\n                </sup>\n              </Divider>\n            </Tooltip>\n          </Col>\n          <Col span={24}>\n            <Slider\n              min={state.sliBy_min}\n              max={state.sliBy_max}\n              defaultValue={state.sliBy_default}\n              marks={getDefaultMark(state.sliBy_default)}\n              onAfterChange={onAfterChangeSlider(\"sliBy\")}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <Tooltip\n              title=\"this parameter affects the hierarchical clustering algorithm to determine the number of clusters, \n                          and there fore number of changing behaviours. the larger the number the less clusters will be found \"\n              color={\"orange\"}\n              key={\"?\"}\n            >\n              <Divider>\n                Cut Threshold{\" \"}\n                <sup>\n                  <QuestionCircleOutlined />\n                </sup>\n              </Divider>\n            </Tooltip>\n          </Col>\n          <Col span={24}>\n            <Slider\n              min={state.cluCut_min}\n              max={state.cluCut_max}\n              defaultValue={state.cluCut_default}\n              marks={getDefaultMark(state.cluCut_default)}\n              onAfterChange={onAfterChangeSlider(\"cluCut\")}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <Tooltip\n              title=\"choose the color scheme for the Drift Map visualizatoin. All of the options should be colorblind friendly. Read more about color schemas at https://matplotlib.org/examples/color/colormaps_reference.html\"\n              color={\"volcano\"}\n              key={\"?\"}\n            >\n              <Divider>\n                Color scheme{\" \"}\n                <sup>\n                  <QuestionCircleOutlined />\n                </sup>\n              </Divider>\n            </Tooltip>\n          </Col>\n          <Col span={24}>\n            <Radio.Group\n              defaultValue={\n                state.defined?.colorTheme || state.colorTheme_default\n              }\n              onChange={onRadioChange(\"colorTheme\")}\n            >\n              {state.colorTheme?.map((theme) => (\n                <Radio value={theme} key={theme}>\n                  {theme}\n                </Radio>\n              ))}\n            </Radio.Group>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <Tooltip\n              title=\"Choose between three types of measures on Declare constraints\"\n              color={\"lime\"}\n              key={\"?\"}\n            >\n              <Divider>\n                Type of constraint{\" \"}\n                <sup>\n                  <QuestionCircleOutlined />\n                </sup>\n              </Divider>\n            </Tooltip>\n          </Col>\n          <Col span={24}>\n            <Radio.Group\n              defaultValue={\n                state.defined?.typeConstr || state.typeConstr_default\n              }\n              onChange={onRadioChange(\"typeConstr\")}\n            >\n              {state.typeConstr?.map((type) => (\n                <Radio value={type} key={type}>\n                  {type}\n                </Radio>\n              ))}\n            </Radio.Group>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <Divider>Additional parameters</Divider>\n          </Col>\n          <Col span={24}>\n            <Tooltip\n              title=\"Click in driftAll if you want find sudden drifts in all separate clusters of behaviour. Leave it if you want to find sudden drifts on the whole dataset.\"\n              color={\"geekblue\"}\n              key={\"?\"}\n            >\n              <Checkbox\n                checked={state.defined?.driftAll ?? state.driftAll}\n                onChange={onCheckboxChange(\"driftAll\")}\n              >\n                drift all{\" \"}\n                <sup>\n                  <QuestionCircleOutlined />\n                </sup>\n              </Checkbox>\n            </Tooltip>\n            <br />\n            <Tooltip\n              title=\"Click in noSort if you do not want to sort constrants in clusters by similarity for the drift map. This only influences the visul representation\"\n              color={\"geekblue\"}\n              key={\"?\"}\n            >\n              <Checkbox\n                checked={state.defined?.noSort ?? state.noSort}\n                onChange={onCheckboxChange(\"noSort\")}\n              >\n                no sort{\" \"}\n                <sup>\n                  <QuestionCircleOutlined />\n                </sup>\n              </Checkbox>\n            </Tooltip>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <Button\n              loading={loading}\n              onClick={onStartAlgorithm}\n              style={{ margin: \"20px 0\" }}\n            >\n              Start algorithm\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    </Layout.Sider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}