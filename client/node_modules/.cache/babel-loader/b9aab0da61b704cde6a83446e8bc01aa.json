{"ast":null,"code":"var _jsxFileName = \"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/components/ToolsComponent/index.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { Slider, Col, Checkbox, Radio, Button, Divider, Row, Tooltip } from \"antd\";\nimport { AppContext, UPDATE_DEFINED_PARAM_ACTION, SET_ALGORITHM_RESULT } from \"../../context/appContext\";\nimport { makeDriftMap, parseErraticMeasureCsv, makeSpreadOfConstraints, makeStationarityTest, makeAutocorrelationPlots } from \"../../apiService\";\n\nconst getDefaultMark = (defaultValue = 0) => ({\n  [defaultValue]: defaultValue\n});\n\nexport const ToolsComponent = () => {\n  var _state$defined, _state$colorTheme, _state$defined2, _state$typeConstr, _state$defined$driftA, _state$defined3, _state$defined$noSort, _state$defined4;\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  const [loading, setLoading] = useState(false);\n\n  if (!state.session_id) {\n    return null;\n  }\n\n  const onAfterChangeSlider = key => value => {\n    dispatch({\n      type: UPDATE_DEFINED_PARAM_ACTION,\n      payload: {\n        [key]: value\n      }\n    });\n  };\n\n  const onCheckboxChange = key => event => {\n    dispatch({\n      type: UPDATE_DEFINED_PARAM_ACTION,\n      payload: {\n        [key]: event.target.checked\n      }\n    });\n  };\n\n  const onRadioChange = key => event => {\n    dispatch({\n      type: UPDATE_DEFINED_PARAM_ACTION,\n      payload: {\n        [key]: event.target.value\n      }\n    });\n  };\n\n  const onStartAlgorithm = async () => {\n    if (state.session_id) {\n      setLoading(true);\n\n      try {\n        const params = {\n          logName: state.session_id,\n          ...state.defined\n        };\n        const algorithmResult = await makeDriftMap(params);\n        const {\n          spread_constraints\n        } = await makeSpreadOfConstraints(params);\n        const stationarityTestResult = await makeStationarityTest(params);\n        const erraticMeasureData = await parseErraticMeasureCsv(algorithmResult.path_to_erratic_measure);\n        const {\n          paths_to_autocorrelation: autocorrelationPlots\n        } = await makeAutocorrelationPlots(params);\n        dispatch({\n          type: SET_ALGORITHM_RESULT,\n          payload: { ...algorithmResult,\n            erraticMeasureData,\n            spread_constraints,\n            stationarityTestResult,\n            autocorrelationPlots\n          }\n        });\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Win size\", /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 32\n    }\n  }, \"?\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, colors.map(color => /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"prompt text\",\n    color: color,\n    key: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, color))))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    min: state.subL_min,\n    max: state.subL_max,\n    defaultValue: state.subL_default,\n    marks: getDefaultMark(state.subL_default),\n    onAfterChange: onAfterChangeSlider(\"subL\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Slide Size\")), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    min: state.sliBy_min,\n    max: state.sliBy_max,\n    defaultValue: state.sliBy_default,\n    marks: getDefaultMark(state.sliBy_default),\n    onAfterChange: onAfterChangeSlider(\"sliBy\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Cut Threshold\")), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    min: state.cluCut_min,\n    max: state.cluCut_max,\n    defaultValue: state.cluCut_default,\n    marks: getDefaultMark(state.cluCut_default),\n    onAfterChange: onAfterChangeSlider(\"cluCut\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Color scheme\")), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Radio.Group, {\n    defaultValue: ((_state$defined = state.defined) === null || _state$defined === void 0 ? void 0 : _state$defined.colorTheme) || state.colorTheme_default,\n    onChange: onRadioChange(\"colorTheme\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, (_state$colorTheme = state.colorTheme) === null || _state$colorTheme === void 0 ? void 0 : _state$colorTheme.map(theme => /*#__PURE__*/React.createElement(Radio, {\n    value: theme,\n    key: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, theme))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"Type of constraint\")), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Radio.Group, {\n    defaultValue: ((_state$defined2 = state.defined) === null || _state$defined2 === void 0 ? void 0 : _state$defined2.typeConstr) || state.typeConstr_default,\n    onChange: onRadioChange(\"typeConstr\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, (_state$typeConstr = state.typeConstr) === null || _state$typeConstr === void 0 ? void 0 : _state$typeConstr.map(type => /*#__PURE__*/React.createElement(Radio, {\n    value: type,\n    key: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, type))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \"Additional parameters\")), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: (_state$defined$driftA = (_state$defined3 = state.defined) === null || _state$defined3 === void 0 ? void 0 : _state$defined3.driftAll) !== null && _state$defined$driftA !== void 0 ? _state$defined$driftA : state.driftAll,\n    onChange: onCheckboxChange(\"driftAll\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, \"drift all\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    checked: (_state$defined$noSort = (_state$defined4 = state.defined) === null || _state$defined4 === void 0 ? void 0 : _state$defined4.noSort) !== null && _state$defined$noSort !== void 0 ? _state$defined$noSort : state.noSort,\n    onChange: onCheckboxChange(\"noSort\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, \"no sort\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    loading: loading,\n    onClick: onStartAlgorithm,\n    style: {\n      margin: \"20px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, \"Start algorithm\"))));\n};","map":{"version":3,"sources":["/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/components/ToolsComponent/index.tsx"],"names":["React","useContext","useState","Slider","Col","Checkbox","Radio","Button","Divider","Row","Tooltip","AppContext","UPDATE_DEFINED_PARAM_ACTION","SET_ALGORITHM_RESULT","makeDriftMap","parseErraticMeasureCsv","makeSpreadOfConstraints","makeStationarityTest","makeAutocorrelationPlots","getDefaultMark","defaultValue","ToolsComponent","state","dispatch","loading","setLoading","session_id","onAfterChangeSlider","key","value","type","payload","onCheckboxChange","event","target","checked","onRadioChange","onStartAlgorithm","params","logName","defined","algorithmResult","spread_constraints","stationarityTestResult","erraticMeasureData","path_to_erratic_measure","paths_to_autocorrelation","autocorrelationPlots","error","console","colors","map","color","subL_min","subL_max","subL_default","sliBy_min","sliBy_max","sliBy_default","cluCut_min","cluCut_max","cluCut_default","colorTheme","colorTheme_default","theme","typeConstr","typeConstr_default","driftAll","noSort","margin"],"mappings":"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","sourcesContent":["import React, { FC, useContext, useState } from \"react\";\nimport { Slider, Col, Checkbox, Radio, Button, Divider, Row, Tooltip } from \"antd\";\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\nimport { SliderValue } from \"antd/lib/slider\";\nimport { RadioChangeEvent } from \"antd/lib/radio\";\nimport {\n  AppContext,\n  UPDATE_DEFINED_PARAM_ACTION,\n  SET_ALGORITHM_RESULT,\n} from \"../../context/appContext\";\n\nimport {\n  makeDriftMap,\n  parseErraticMeasureCsv,\n  makeSpreadOfConstraints,\n  makeStationarityTest,\n  makeAutocorrelationPlots,\n} from \"../../apiService\";\n\nconst getDefaultMark = (defaultValue: number = 0) => ({\n  [defaultValue]: defaultValue,\n});\n\nexport const ToolsComponent: FC = () => {\n  const { state, dispatch } = useContext(AppContext);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  if (!state.session_id) {\n    return null;\n  }\n\n  const onAfterChangeSlider = (key: string) => (value: SliderValue) => {\n    dispatch({ type: UPDATE_DEFINED_PARAM_ACTION, payload: { [key]: value } });\n  };\n\n  const onCheckboxChange = (key: string) => (event: CheckboxChangeEvent) => {\n    dispatch({\n      type: UPDATE_DEFINED_PARAM_ACTION,\n      payload: { [key]: event.target.checked },\n    });\n  };\n\n  const onRadioChange = (key: string) => (event: RadioChangeEvent) => {\n    dispatch({\n      type: UPDATE_DEFINED_PARAM_ACTION,\n      payload: { [key]: event.target.value },\n    });\n  };\n\n  const onStartAlgorithm = async () => {\n    if (state.session_id) {\n      setLoading(true);\n      try {\n        const params = { logName: state.session_id, ...state.defined };\n        const algorithmResult = await makeDriftMap(params);\n        const { spread_constraints } = await makeSpreadOfConstraints(params);\n        const stationarityTestResult = await makeStationarityTest(params);\n        const erraticMeasureData = await parseErraticMeasureCsv(\n          algorithmResult.path_to_erratic_measure\n        );\n        const {\n          paths_to_autocorrelation: autocorrelationPlots,\n        } = await makeAutocorrelationPlots(params);\n\n\n        dispatch({\n          type: SET_ALGORITHM_RESULT,\n          payload: {\n            ...algorithmResult,\n            erraticMeasureData,\n            spread_constraints,\n            stationarityTestResult,\n            autocorrelationPlots,\n          },\n        });\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Row>\n        {/* <Tooltip title=\"Win size\" color=\"pink\"> */}\n            <Col span={24}>\n              <Divider>Win size<sup>?</sup></Divider>\n              <div>\n                {colors.map(color => (\n                  <Tooltip title=\"prompt text\" color={color} key={color}>\n                    <Button>{color}</Button>\n                  </Tooltip>\n                ))}\n              </div>\n            </Col>\n            <Col span={24}>\n              <Slider\n                min={state.subL_min}\n                max={state.subL_max}\n                defaultValue={state.subL_default}\n                marks={getDefaultMark(state.subL_default)}\n                onAfterChange={onAfterChangeSlider(\"subL\")}\n              />\n            </Col>\n        {/* </Tooltip> */}\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Divider>Slide Size</Divider>\n        </Col>\n        <Col span={24}>\n          <Slider\n            min={state.sliBy_min}\n            max={state.sliBy_max}\n            defaultValue={state.sliBy_default}\n            marks={getDefaultMark(state.sliBy_default)}\n            onAfterChange={onAfterChangeSlider(\"sliBy\")}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Divider>Cut Threshold</Divider>\n        </Col>\n        <Col span={24}>\n          <Slider\n            min={state.cluCut_min}\n            max={state.cluCut_max}\n            defaultValue={state.cluCut_default}\n            marks={getDefaultMark(state.cluCut_default)}\n            onAfterChange={onAfterChangeSlider(\"cluCut\")}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n        <Divider>Color scheme</Divider>\n        </Col>\n        <Col span={24}>\n          <Radio.Group\n            defaultValue={state.defined?.colorTheme || state.colorTheme_default}\n            onChange={onRadioChange(\"colorTheme\")}\n          >\n            {state.colorTheme?.map((theme) => (\n              <Radio value={theme} key={theme}>\n                {theme}\n              </Radio>\n            ))}\n          </Radio.Group>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Divider>Type of constraint</Divider>\n        </Col>\n        <Col span={24}>\n        <Radio.Group\n          defaultValue={state.defined?.typeConstr || state.typeConstr_default}\n          onChange={onRadioChange(\"typeConstr\")}\n        >\n          {state.typeConstr?.map((type) => (\n            <Radio value={type} key={type}>\n              {type}\n            </Radio>\n          ))}\n        </Radio.Group>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Divider>Additional parameters</Divider>\n        </Col>\n        <Col span={24}>\n          <Checkbox\n            checked={state.defined?.driftAll ?? state.driftAll}\n            onChange={onCheckboxChange(\"driftAll\")}\n          >\n            drift all\n          </Checkbox>\n          <br />\n          <Checkbox\n            checked={state.defined?.noSort ?? state.noSort}\n            onChange={onCheckboxChange(\"noSort\")}\n          >\n            no sort\n          </Checkbox>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Button loading={loading} onClick={onStartAlgorithm} style={{margin: \"20px 0\"}}>\n            Start algorithm\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}