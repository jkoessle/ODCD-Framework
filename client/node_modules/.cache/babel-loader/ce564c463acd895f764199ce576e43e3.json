{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n */\n\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Selector from './Selector';\nimport SelectTrigger from './SelectTrigger';\nimport { INTERNAL_PROPS_MARK } from './interface/generator';\nimport { toInnerValue, toOuterValues, removeLastEnabledValue, getUUID } from './utils/commonUtil';\nimport TransBtn from './TransBtn';\nimport useLock from './hooks/useLock';\nimport useDelayReset from './hooks/useDelayReset';\nimport useLayoutEffect from './hooks/useLayoutEffect';\nimport { getSeparatedContent } from './utils/valueUtil';\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\nimport useCacheDisplayValue from './hooks/useCacheDisplayValue';\nimport useCacheOptions from './hooks/useCacheOptions';\nvar DEFAULT_OMIT_PROPS = ['removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown'];\n/**\n * This function is in internal usage.\n * Do not use it in your prod env since we may refactor this.\n */\n\nexport default function generateSelector(config) {\n  var defaultPrefixCls = config.prefixCls,\n      OptionList = config.components.optionList,\n      convertChildrenToData = config.convertChildrenToData,\n      flattenOptions = config.flattenOptions,\n      getLabeledValue = config.getLabeledValue,\n      filterOptions = config.filterOptions,\n      isValueDisabled = config.isValueDisabled,\n      findValueOption = config.findValueOption,\n      warningProps = config.warningProps,\n      fillOptionsWithMissingValue = config.fillOptionsWithMissingValue,\n      omitDOMProps = config.omitDOMProps; // Use raw define since `React.FC` not support generic\n\n  function Select(props, ref) {\n    var _classNames2;\n\n    var _props$prefixCls = props.prefixCls,\n        prefixCls = _props$prefixCls === void 0 ? defaultPrefixCls : _props$prefixCls,\n        className = props.className,\n        id = props.id,\n        open = props.open,\n        defaultOpen = props.defaultOpen,\n        options = props.options,\n        children = props.children,\n        mode = props.mode,\n        value = props.value,\n        defaultValue = props.defaultValue,\n        labelInValue = props.labelInValue,\n        showSearch = props.showSearch,\n        inputValue = props.inputValue,\n        searchValue = props.searchValue,\n        filterOption = props.filterOption,\n        _props$optionFilterPr = props.optionFilterProp,\n        optionFilterProp = _props$optionFilterPr === void 0 ? 'value' : _props$optionFilterPr,\n        _props$autoClearSearc = props.autoClearSearchValue,\n        autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n        onSearch = props.onSearch,\n        allowClear = props.allowClear,\n        clearIcon = props.clearIcon,\n        showArrow = props.showArrow,\n        inputIcon = props.inputIcon,\n        menuItemSelectedIcon = props.menuItemSelectedIcon,\n        disabled = props.disabled,\n        loading = props.loading,\n        defaultActiveFirstOption = props.defaultActiveFirstOption,\n        _props$notFoundConten = props.notFoundContent,\n        notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n        optionLabelProp = props.optionLabelProp,\n        backfill = props.backfill,\n        getInputElement = props.getInputElement,\n        getPopupContainer = props.getPopupContainer,\n        _props$listHeight = props.listHeight,\n        listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n        _props$listItemHeight = props.listItemHeight,\n        listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n        animation = props.animation,\n        transitionName = props.transitionName,\n        virtual = props.virtual,\n        dropdownStyle = props.dropdownStyle,\n        dropdownClassName = props.dropdownClassName,\n        dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n        dropdownRender = props.dropdownRender,\n        dropdownAlign = props.dropdownAlign,\n        _props$showAction = props.showAction,\n        showAction = _props$showAction === void 0 ? [] : _props$showAction,\n        direction = props.direction,\n        tokenSeparators = props.tokenSeparators,\n        tagRender = props.tagRender,\n        onPopupScroll = props.onPopupScroll,\n        onDropdownVisibleChange = props.onDropdownVisibleChange,\n        onFocus = props.onFocus,\n        onBlur = props.onBlur,\n        onKeyUp = props.onKeyUp,\n        onKeyDown = props.onKeyDown,\n        onMouseDown = props.onMouseDown,\n        onChange = props.onChange,\n        onSelect = props.onSelect,\n        onDeselect = props.onDeselect,\n        _props$internalProps = props.internalProps,\n        internalProps = _props$internalProps === void 0 ? {} : _props$internalProps,\n        restProps = _objectWithoutProperties(props, [\"prefixCls\", \"className\", \"id\", \"open\", \"defaultOpen\", \"options\", \"children\", \"mode\", \"value\", \"defaultValue\", \"labelInValue\", \"showSearch\", \"inputValue\", \"searchValue\", \"filterOption\", \"optionFilterProp\", \"autoClearSearchValue\", \"onSearch\", \"allowClear\", \"clearIcon\", \"showArrow\", \"inputIcon\", \"menuItemSelectedIcon\", \"disabled\", \"loading\", \"defaultActiveFirstOption\", \"notFoundContent\", \"optionLabelProp\", \"backfill\", \"getInputElement\", \"getPopupContainer\", \"listHeight\", \"listItemHeight\", \"animation\", \"transitionName\", \"virtual\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"showAction\", \"direction\", \"tokenSeparators\", \"tagRender\", \"onPopupScroll\", \"onDropdownVisibleChange\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\", \"onChange\", \"onSelect\", \"onDeselect\", \"internalProps\"]);\n\n    var useInternalProps = internalProps.mark === INTERNAL_PROPS_MARK;\n    var domProps = omitDOMProps ? omitDOMProps(restProps) : restProps;\n    DEFAULT_OMIT_PROPS.forEach(function (prop) {\n      delete domProps[prop];\n    });\n    var containerRef = React.useRef(null);\n    var triggerRef = React.useRef(null);\n    var selectorRef = React.useRef(null);\n    var listRef = React.useRef(null);\n    /** Used for component focused management */\n\n    var _useDelayReset = useDelayReset(),\n        _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n        mockFocused = _useDelayReset2[0],\n        setMockFocused = _useDelayReset2[1],\n        cancelSetMockFocused = _useDelayReset2[2]; // Inner id for accessibility usage. Only work in client side\n\n\n    var _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        innerId = _React$useState2[0],\n        setInnerId = _React$useState2[1];\n\n    React.useEffect(function () {\n      setInnerId(\"rc_select_\".concat(getUUID()));\n    }, []);\n    var mergedId = id || innerId; // optionLabelProp\n\n    var mergedOptionLabelProp = optionLabelProp;\n\n    if (mergedOptionLabelProp === undefined) {\n      mergedOptionLabelProp = options ? 'label' : 'children';\n    } // labelInValue\n\n\n    var mergedLabelInValue = mode === 'combobox' ? false : labelInValue;\n    var isMultiple = mode === 'tags' || mode === 'multiple';\n    var mergedShowSearch = showSearch !== undefined ? showSearch : isMultiple || mode === 'combobox'; // ============================== Ref ===============================\n\n    var selectorDomRef = React.useRef(null);\n    React.useImperativeHandle(ref, function () {\n      return {\n        focus: selectorRef.current.focus,\n        blur: selectorRef.current.blur\n      };\n    }); // ============================= Value ==============================\n\n    var _React$useState3 = React.useState(value || defaultValue),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        innerValue = _React$useState4[0],\n        setInnerValue = _React$useState4[1];\n\n    var baseValue = value !== undefined ? value : innerValue; // Should reset when controlled to be uncontrolled\n\n    var prevValueRef = React.useRef(value);\n    React.useEffect(function () {\n      if (prevValueRef.current !== value && (value === undefined || value === null)) {\n        setInnerValue(undefined);\n      }\n\n      prevValueRef.current = value;\n    }, [value]);\n    /** Unique raw values */\n\n    var mergedRawValue = React.useMemo(function () {\n      return toInnerValue(baseValue, {\n        labelInValue: mergedLabelInValue,\n        combobox: mode === 'combobox'\n      });\n    }, [baseValue, mergedLabelInValue]);\n    /** We cache a set of raw values to speed up check */\n\n    var rawValues = React.useMemo(function () {\n      return new Set(mergedRawValue);\n    }, [mergedRawValue]); // ============================= Option =============================\n    // Set by option list active, it will merge into search input when mode is `combobox`\n\n    var _React$useState5 = React.useState(null),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        activeValue = _React$useState6[0],\n        setActiveValue = _React$useState6[1];\n\n    var _React$useState7 = React.useState(''),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        innerSearchValue = _React$useState8[0],\n        setInnerSearchValue = _React$useState8[1];\n\n    var mergedSearchValue = innerSearchValue;\n\n    if (mode === 'combobox' && value !== undefined) {\n      mergedSearchValue = value;\n    } else if (searchValue !== undefined) {\n      mergedSearchValue = searchValue;\n    } else if (inputValue) {\n      mergedSearchValue = inputValue;\n    }\n\n    var mergedOptions = React.useMemo(function () {\n      var newOptions = options;\n\n      if (newOptions === undefined) {\n        newOptions = convertChildrenToData(children);\n      }\n      /**\n       * `tags` should fill un-list item.\n       * This is not cool here since TreeSelect do not need this\n       */\n\n\n      if (mode === 'tags' && fillOptionsWithMissingValue) {\n        newOptions = fillOptionsWithMissingValue(newOptions, baseValue, mergedOptionLabelProp, labelInValue);\n      }\n\n      return newOptions || [];\n    }, [options, children, mode, baseValue]);\n    var mergedFlattenOptions = React.useMemo(function () {\n      return flattenOptions(mergedOptions, props);\n    }, [mergedOptions]);\n    var getValueOption = useCacheOptions(mergedRawValue, mergedFlattenOptions); // Display options for OptionList\n\n    var displayOptions = React.useMemo(function () {\n      if (!mergedSearchValue || !mergedShowSearch) {\n        return _toConsumableArray(mergedOptions);\n      }\n\n      var filteredOptions = filterOptions(mergedSearchValue, mergedOptions, {\n        optionFilterProp: optionFilterProp,\n        filterOption: mode === 'combobox' && filterOption === undefined ? function () {\n          return true;\n        } : filterOption\n      });\n\n      if (mode === 'tags' && filteredOptions.every(function (opt) {\n        return opt.value !== mergedSearchValue;\n      })) {\n        filteredOptions.unshift({\n          value: mergedSearchValue,\n          label: mergedSearchValue,\n          key: '__RC_SELECT_TAG_PLACEHOLDER__'\n        });\n      }\n\n      return filteredOptions;\n    }, [mergedOptions, mergedSearchValue, mode, mergedShowSearch]);\n    var displayFlattenOptions = React.useMemo(function () {\n      return flattenOptions(displayOptions, props);\n    }, [displayOptions]);\n    React.useEffect(function () {\n      if (listRef.current && listRef.current.scrollTo) {\n        listRef.current.scrollTo(0);\n      }\n    }, [mergedSearchValue]); // ============================ Selector ============================\n\n    var displayValues = React.useMemo(function () {\n      return mergedRawValue.map(function (val) {\n        var valueOptions = getValueOption([val]);\n        var displayValue = getLabeledValue(val, {\n          options: valueOptions,\n          prevValue: baseValue,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        });\n        return _objectSpread(_objectSpread({}, displayValue), {}, {\n          disabled: isValueDisabled(val, valueOptions)\n        });\n      });\n    }, [baseValue, mergedOptions]); // Polyfill with cache label\n\n    displayValues = useCacheDisplayValue(displayValues);\n\n    var triggerSelect = function triggerSelect(newValue, isSelect, source) {\n      var newValueOption = getValueOption([newValue]);\n      var outOption = findValueOption([newValue], newValueOption)[0];\n\n      if (!internalProps.skipTriggerSelect) {\n        // Skip trigger `onSelect` or `onDeselect` if configured\n        var selectValue = mergedLabelInValue ? getLabeledValue(newValue, {\n          options: newValueOption,\n          prevValue: baseValue,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        }) : newValue;\n\n        if (isSelect && onSelect) {\n          onSelect(selectValue, outOption);\n        } else if (!isSelect && onDeselect) {\n          onDeselect(selectValue, outOption);\n        }\n      } // Trigger internal event\n\n\n      if (useInternalProps) {\n        if (isSelect && internalProps.onRawSelect) {\n          internalProps.onRawSelect(newValue, outOption, source);\n        } else if (!isSelect && internalProps.onRawDeselect) {\n          internalProps.onRawDeselect(newValue, outOption, source);\n        }\n      }\n    };\n\n    var triggerChange = function triggerChange(newRawValues) {\n      if (useInternalProps && internalProps.skipTriggerChange) {\n        return;\n      }\n\n      var newRawValuesOptions = getValueOption(newRawValues);\n      var outValues = toOuterValues(Array.from(newRawValues), {\n        labelInValue: mergedLabelInValue,\n        options: newRawValuesOptions,\n        getLabeledValue: getLabeledValue,\n        prevValue: baseValue,\n        optionLabelProp: mergedOptionLabelProp\n      });\n      var outValue = isMultiple ? outValues : outValues[0]; // Skip trigger if prev & current value is both empty\n\n      if (onChange && (mergedRawValue.length !== 0 || outValues.length !== 0)) {\n        var outOptions = findValueOption(newRawValues, newRawValuesOptions);\n        onChange(outValue, isMultiple ? outOptions : outOptions[0]);\n      }\n\n      setInnerValue(outValue);\n    };\n\n    var onInternalSelect = function onInternalSelect(newValue, _ref) {\n      var selected = _ref.selected,\n          source = _ref.source;\n\n      if (disabled) {\n        return;\n      }\n\n      var newRawValue;\n\n      if (isMultiple) {\n        newRawValue = new Set(mergedRawValue);\n\n        if (selected) {\n          newRawValue.add(newValue);\n        } else {\n          newRawValue.delete(newValue);\n        }\n      } else {\n        newRawValue = new Set();\n        newRawValue.add(newValue);\n      } // Multiple always trigger change and single should change if value changed\n\n\n      if (isMultiple || !isMultiple && Array.from(mergedRawValue)[0] !== newValue) {\n        triggerChange(Array.from(newRawValue));\n      } // Trigger `onSelect`. Single mode always trigger select\n\n\n      triggerSelect(newValue, !isMultiple || selected, source); // Clean search value if single or configured\n\n      if (mode === 'combobox') {\n        setInnerSearchValue(String(newValue));\n        setActiveValue('');\n      } else if (!isMultiple || autoClearSearchValue) {\n        setInnerSearchValue('');\n        setActiveValue('');\n      }\n    };\n\n    var onInternalOptionSelect = function onInternalOptionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'option'\n      }));\n    };\n\n    var onInternalSelectionSelect = function onInternalSelectionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'selection'\n      }));\n    }; // ============================= Input ==============================\n    // Only works in `combobox`\n\n\n    var customizeInputElement = mode === 'combobox' && getInputElement && getInputElement() || null; // ============================== Open ==============================\n\n    var _useMergedState = useMergedState(undefined, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        innerOpen = _useMergedState2[0],\n        setInnerOpen = _useMergedState2[1];\n\n    var mergedOpen = innerOpen; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n    var emptyListContent = !notFoundContent && !displayOptions.length;\n\n    if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n      mergedOpen = false;\n    }\n\n    var triggerOpen = emptyListContent ? false : mergedOpen;\n\n    var onToggleOpen = function onToggleOpen(newOpen) {\n      var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n\n      if (innerOpen !== nextOpen && !disabled) {\n        setInnerOpen(nextOpen);\n\n        if (onDropdownVisibleChange) {\n          onDropdownVisibleChange(nextOpen);\n        }\n      }\n    };\n\n    useSelectTriggerControl([containerRef.current, triggerRef.current && triggerRef.current.getPopupElement()], triggerOpen, onToggleOpen); // ============================= Search =============================\n\n    var triggerSearch = function triggerSearch(searchText, fromTyping, isCompositing) {\n      var ret = true;\n      var newSearchText = searchText;\n      setActiveValue(null); // Check if match the `tokenSeparators`\n\n      var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators);\n      var patchRawValues = patchLabels;\n\n      if (mode === 'combobox') {\n        // Only typing will trigger onChange\n        if (fromTyping) {\n          triggerChange([newSearchText]);\n        }\n      } else if (patchLabels) {\n        newSearchText = '';\n\n        if (mode !== 'tags') {\n          patchRawValues = patchLabels.map(function (label) {\n            var item = mergedFlattenOptions.find(function (_ref2) {\n              var data = _ref2.data;\n              return data[mergedOptionLabelProp] === label;\n            });\n            return item ? item.data.value : null;\n          }).filter(function (val) {\n            return val !== null;\n          });\n        }\n\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), _toConsumableArray(patchRawValues))));\n        triggerChange(newRawValues);\n        newRawValues.forEach(function (newRawValue) {\n          triggerSelect(newRawValue, true, 'input');\n        }); // Should close when paste finish\n\n        onToggleOpen(false); // Tell Selector that break next actions\n\n        ret = false;\n      }\n\n      setInnerSearchValue(newSearchText);\n\n      if (onSearch && mergedSearchValue !== newSearchText) {\n        onSearch(newSearchText);\n      }\n\n      return ret;\n    }; // Close dropdown when disabled change\n\n\n    React.useEffect(function () {\n      if (innerOpen && !!disabled) {\n        setInnerOpen(false);\n      }\n    }, [disabled]); // Close will clean up single mode search text\n\n    React.useEffect(function () {\n      if (!mergedOpen && !isMultiple && mode !== 'combobox') {\n        triggerSearch('', false, false);\n      }\n    }, [mergedOpen]); // ============================ Keyboard ============================\n\n    /**\n     * We record input value here to check if can press to clean up by backspace\n     * - null: Key is not down, this is reset by key up\n     * - true: Search text is empty when first time backspace down\n     * - false: Search text is not empty when first time backspace down\n     */\n\n    var _useLock = useLock(),\n        _useLock2 = _slicedToArray(_useLock, 2),\n        getClearLock = _useLock2[0],\n        setClearLock = _useLock2[1]; // KeyDown\n\n\n    var onInternalKeyDown = function onInternalKeyDown(event) {\n      var clearLock = getClearLock();\n      var which = event.which; // We only manage open state here, close logic should handle by list component\n\n      if (!mergedOpen && which === KeyCode.ENTER) {\n        onToggleOpen(true);\n      }\n\n      setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n      if (which === KeyCode.BACKSPACE && !clearLock && isMultiple && !mergedSearchValue && mergedRawValue.length) {\n        var removeInfo = removeLastEnabledValue(displayValues, mergedRawValue);\n\n        if (removeInfo.removedValue !== null) {\n          triggerChange(removeInfo.values);\n          triggerSelect(removeInfo.removedValue, false, 'input');\n        }\n      }\n\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current;\n\n        (_listRef$current = listRef.current).onKeyDown.apply(_listRef$current, [event].concat(rest));\n      }\n\n      if (onKeyDown) {\n        onKeyDown.apply(void 0, [event].concat(rest));\n      }\n    }; // KeyUp\n\n\n    var onInternalKeyUp = function onInternalKeyUp(event) {\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current2;\n\n        (_listRef$current2 = listRef.current).onKeyUp.apply(_listRef$current2, [event].concat(rest));\n      }\n\n      if (onKeyUp) {\n        onKeyUp.apply(void 0, [event].concat(rest));\n      }\n    }; // ========================== Focus / Blur ==========================\n\n    /** Record real focus status */\n\n\n    var focusRef = React.useRef(false);\n\n    var onContainerFocus = function onContainerFocus() {\n      setMockFocused(true);\n\n      if (!disabled) {\n        if (onFocus && !focusRef.current) {\n          onFocus.apply(void 0, arguments);\n        } // `showAction` should handle `focus` if set\n\n\n        if (showAction.includes('focus')) {\n          onToggleOpen(true);\n        }\n      }\n\n      focusRef.current = true;\n    };\n\n    var onContainerBlur = function onContainerBlur() {\n      setMockFocused(false, function () {\n        focusRef.current = false;\n        onToggleOpen(false);\n      });\n\n      if (disabled) {\n        return;\n      }\n\n      if (mergedSearchValue) {\n        // `tags` mode should move `searchValue` into values\n        if (mode === 'tags') {\n          triggerSearch('', false, false);\n          triggerChange(Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [mergedSearchValue]))));\n        } else if (mode === 'multiple') {\n          // `multiple` mode only clean the search value but not trigger event\n          setInnerSearchValue('');\n        }\n      }\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    var activeTimeoutIds = [];\n    React.useEffect(function () {\n      return function () {\n        activeTimeoutIds.forEach(function (timeoutId) {\n          return clearTimeout(timeoutId);\n        });\n        activeTimeoutIds.splice(0, activeTimeoutIds.length);\n      };\n    }, []);\n\n    var onInternalMouseDown = function onInternalMouseDown(event) {\n      var target = event.target;\n      var popupElement = triggerRef.current && triggerRef.current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n      if (popupElement && popupElement.contains(target)) {\n        var timeoutId = setTimeout(function () {\n          var index = activeTimeoutIds.indexOf(timeoutId);\n\n          if (index !== -1) {\n            activeTimeoutIds.splice(index, 1);\n          }\n\n          cancelSetMockFocused();\n\n          if (!popupElement.contains(document.activeElement)) {\n            selectorRef.current.focus();\n          }\n        });\n        activeTimeoutIds.push(timeoutId);\n      }\n\n      if (onMouseDown) {\n        for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          restArgs[_key3 - 1] = arguments[_key3];\n        }\n\n        onMouseDown.apply(void 0, [event].concat(restArgs));\n      }\n    }; // ========================= Accessibility ==========================\n\n\n    var _React$useState9 = React.useState(0),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        accessibilityIndex = _React$useState10[0],\n        setAccessibilityIndex = _React$useState10[1];\n\n    var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n\n    var onActiveValue = function onActiveValue(active, index) {\n      setAccessibilityIndex(index);\n\n      if (backfill && mode === 'combobox' && active !== null) {\n        setActiveValue(String(active));\n      }\n    }; // ============================= Popup ==============================\n\n\n    var _React$useState11 = React.useState(null),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        containerWidth = _React$useState12[0],\n        setContainerWidth = _React$useState12[1];\n\n    useLayoutEffect(function () {\n      if (triggerOpen) {\n        var newWidth = Math.ceil(containerRef.current.offsetWidth);\n\n        if (containerWidth !== newWidth) {\n          setContainerWidth(newWidth);\n        }\n      }\n    }, [triggerOpen]);\n    var popupNode = React.createElement(OptionList, {\n      ref: listRef,\n      prefixCls: prefixCls,\n      id: mergedId,\n      open: mergedOpen,\n      childrenAsData: !options,\n      options: displayOptions,\n      flattenOptions: displayFlattenOptions,\n      multiple: isMultiple,\n      values: rawValues,\n      height: listHeight,\n      itemHeight: listItemHeight,\n      onSelect: onInternalOptionSelect,\n      onToggleOpen: onToggleOpen,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      notFoundContent: notFoundContent,\n      onScroll: onPopupScroll,\n      searchValue: mergedSearchValue,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      virtual: virtual !== false && dropdownMatchSelectWidth !== false\n    }); // ============================= Clear ==============================\n\n    var clearNode;\n\n    var onClearMouseDown = function onClearMouseDown() {\n      // Trigger internal `onClear` event\n      if (useInternalProps && internalProps.onClear) {\n        internalProps.onClear();\n      }\n\n      triggerChange([]);\n      triggerSearch('', false, false);\n    };\n\n    if (!disabled && allowClear && (mergedRawValue.length || mergedSearchValue)) {\n      clearNode = React.createElement(TransBtn, {\n        className: \"\".concat(prefixCls, \"-clear\"),\n        onMouseDown: onClearMouseDown,\n        customizeIcon: clearIcon\n      }, \"\\xD7\");\n    } // ============================= Arrow ==============================\n\n\n    var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !isMultiple && mode !== 'combobox';\n    var arrowNode;\n\n    if (mergedShowArrow) {\n      arrowNode = React.createElement(TransBtn, {\n        className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n        customizeIcon: inputIcon,\n        customizeIconProps: {\n          loading: loading,\n          searchValue: mergedSearchValue,\n          open: mergedOpen,\n          focused: mockFocused,\n          showSearch: mergedShowSearch\n        }\n      });\n    } // ============================ Warning =============================\n\n\n    if (process.env.NODE_ENV !== 'production' && warningProps) {\n      warningProps(props);\n    } // ============================= Render =============================\n\n\n    var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\n    return React.createElement(\"div\", Object.assign({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        display: 'flex',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(mergedRawValue.join(', '))), React.createElement(SelectTrigger, {\n      ref: triggerRef,\n      disabled: disabled,\n      prefixCls: prefixCls,\n      visible: triggerOpen,\n      popupElement: popupNode,\n      containerWidth: containerWidth,\n      animation: animation,\n      transitionName: transitionName,\n      dropdownStyle: dropdownStyle,\n      dropdownClassName: dropdownClassName,\n      direction: direction,\n      dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n      dropdownRender: dropdownRender,\n      dropdownAlign: dropdownAlign,\n      getPopupContainer: getPopupContainer,\n      empty: !mergedOptions.length,\n      getTriggerDOMNode: function getTriggerDOMNode() {\n        return selectorDomRef.current;\n      }\n    }, React.createElement(Selector, Object.assign({}, props, {\n      domRef: selectorDomRef,\n      prefixCls: prefixCls,\n      inputElement: customizeInputElement,\n      ref: selectorRef,\n      id: mergedId,\n      showSearch: mergedShowSearch,\n      mode: mode,\n      accessibilityIndex: accessibilityIndex,\n      multiple: isMultiple,\n      tagRender: tagRender,\n      values: displayValues,\n      open: mergedOpen,\n      onToggleOpen: onToggleOpen,\n      searchValue: mergedSearchValue,\n      activeValue: activeValue,\n      onSearch: triggerSearch,\n      onSelect: onInternalSelectionSelect\n    }))), arrowNode, clearNode);\n  }\n\n  var RefSelect = React.forwardRef(Select);\n  return RefSelect;\n}","map":{"version":3,"sources":["/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/node_modules/rc-select/es/generate.js"],"names":["_defineProperty","_toConsumableArray","_slicedToArray","_objectWithoutProperties","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","KeyCode","classNames","useMergedState","Selector","SelectTrigger","INTERNAL_PROPS_MARK","toInnerValue","toOuterValues","removeLastEnabledValue","getUUID","TransBtn","useLock","useDelayReset","useLayoutEffect","getSeparatedContent","useSelectTriggerControl","useCacheDisplayValue","useCacheOptions","DEFAULT_OMIT_PROPS","generateSelector","config","defaultPrefixCls","prefixCls","OptionList","components","optionList","convertChildrenToData","flattenOptions","getLabeledValue","filterOptions","isValueDisabled","findValueOption","warningProps","fillOptionsWithMissingValue","omitDOMProps","Select","props","ref","_classNames2","_props$prefixCls","className","id","open","defaultOpen","options","children","mode","value","defaultValue","labelInValue","showSearch","inputValue","searchValue","filterOption","_props$optionFilterPr","optionFilterProp","_props$autoClearSearc","autoClearSearchValue","onSearch","allowClear","clearIcon","showArrow","inputIcon","menuItemSelectedIcon","disabled","loading","defaultActiveFirstOption","_props$notFoundConten","notFoundContent","optionLabelProp","backfill","getInputElement","getPopupContainer","_props$listHeight","listHeight","_props$listItemHeight","listItemHeight","animation","transitionName","virtual","dropdownStyle","dropdownClassName","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","_props$showAction","showAction","direction","tokenSeparators","tagRender","onPopupScroll","onDropdownVisibleChange","onFocus","onBlur","onKeyUp","onKeyDown","onMouseDown","onChange","onSelect","onDeselect","_props$internalProps","internalProps","restProps","useInternalProps","mark","domProps","prop","containerRef","useRef","triggerRef","selectorRef","listRef","_useDelayReset","_useDelayReset2","mockFocused","setMockFocused","cancelSetMockFocused","_React$useState","useState","_React$useState2","innerId","setInnerId","useEffect","concat","mergedId","mergedOptionLabelProp","undefined","mergedLabelInValue","isMultiple","mergedShowSearch","selectorDomRef","useImperativeHandle","focus","current","blur","_React$useState3","_React$useState4","innerValue","setInnerValue","baseValue","prevValueRef","mergedRawValue","useMemo","combobox","rawValues","Set","_React$useState5","_React$useState6","activeValue","setActiveValue","_React$useState7","_React$useState8","innerSearchValue","setInnerSearchValue","mergedSearchValue","mergedOptions","newOptions","mergedFlattenOptions","getValueOption","displayOptions","filteredOptions","every","opt","unshift","label","displayFlattenOptions","scrollTo","displayValues","map","val","valueOptions","displayValue","prevValue","triggerSelect","newValue","isSelect","newValueOption","outOption","skipTriggerSelect","selectValue","onRawSelect","onRawDeselect","triggerChange","newRawValues","skipTriggerChange","newRawValuesOptions","outValues","Array","from","outValue","outOptions","onInternalSelect","_ref","selected","newRawValue","add","delete","String","onInternalOptionSelect","info","onInternalSelectionSelect","customizeInputElement","_useMergedState","_useMergedState2","innerOpen","setInnerOpen","mergedOpen","emptyListContent","triggerOpen","onToggleOpen","newOpen","nextOpen","getPopupElement","triggerSearch","searchText","fromTyping","isCompositing","ret","newSearchText","patchLabels","patchRawValues","item","find","_ref2","data","_useLock","_useLock2","getClearLock","setClearLock","onInternalKeyDown","event","clearLock","which","ENTER","BACKSPACE","removeInfo","removedValue","values","_len","rest","_key","_listRef$current","onInternalKeyUp","_len2","_key2","_listRef$current2","focusRef","onContainerFocus","includes","onContainerBlur","activeTimeoutIds","timeoutId","clearTimeout","splice","onInternalMouseDown","popupElement","contains","setTimeout","index","indexOf","document","activeElement","_len3","restArgs","_key3","_React$useState9","_React$useState10","accessibilityIndex","setAccessibilityIndex","mergedDefaultActiveFirstOption","onActiveValue","active","_React$useState11","_React$useState12","containerWidth","setContainerWidth","newWidth","Math","ceil","offsetWidth","popupNode","createElement","childrenAsData","multiple","height","itemHeight","onScroll","clearNode","onClearMouseDown","onClear","customizeIcon","mergedShowArrow","arrowNode","customizeIconProps","focused","process","env","NODE_ENV","mergedClassName","assign","style","width","display","overflow","opacity","join","visible","empty","getTriggerDOMNode","domRef","inputElement","RefSelect","forwardRef"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n */\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Selector from './Selector';\nimport SelectTrigger from './SelectTrigger';\nimport { INTERNAL_PROPS_MARK } from './interface/generator';\nimport { toInnerValue, toOuterValues, removeLastEnabledValue, getUUID } from './utils/commonUtil';\nimport TransBtn from './TransBtn';\nimport useLock from './hooks/useLock';\nimport useDelayReset from './hooks/useDelayReset';\nimport useLayoutEffect from './hooks/useLayoutEffect';\nimport { getSeparatedContent } from './utils/valueUtil';\nimport useSelectTriggerControl from './hooks/useSelectTriggerControl';\nimport useCacheDisplayValue from './hooks/useCacheDisplayValue';\nimport useCacheOptions from './hooks/useCacheOptions';\nvar DEFAULT_OMIT_PROPS = ['removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown'];\n/**\n * This function is in internal usage.\n * Do not use it in your prod env since we may refactor this.\n */\n\nexport default function generateSelector(config) {\n  var defaultPrefixCls = config.prefixCls,\n      OptionList = config.components.optionList,\n      convertChildrenToData = config.convertChildrenToData,\n      flattenOptions = config.flattenOptions,\n      getLabeledValue = config.getLabeledValue,\n      filterOptions = config.filterOptions,\n      isValueDisabled = config.isValueDisabled,\n      findValueOption = config.findValueOption,\n      warningProps = config.warningProps,\n      fillOptionsWithMissingValue = config.fillOptionsWithMissingValue,\n      omitDOMProps = config.omitDOMProps; // Use raw define since `React.FC` not support generic\n\n  function Select(props, ref) {\n    var _classNames2;\n\n    var _props$prefixCls = props.prefixCls,\n        prefixCls = _props$prefixCls === void 0 ? defaultPrefixCls : _props$prefixCls,\n        className = props.className,\n        id = props.id,\n        open = props.open,\n        defaultOpen = props.defaultOpen,\n        options = props.options,\n        children = props.children,\n        mode = props.mode,\n        value = props.value,\n        defaultValue = props.defaultValue,\n        labelInValue = props.labelInValue,\n        showSearch = props.showSearch,\n        inputValue = props.inputValue,\n        searchValue = props.searchValue,\n        filterOption = props.filterOption,\n        _props$optionFilterPr = props.optionFilterProp,\n        optionFilterProp = _props$optionFilterPr === void 0 ? 'value' : _props$optionFilterPr,\n        _props$autoClearSearc = props.autoClearSearchValue,\n        autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n        onSearch = props.onSearch,\n        allowClear = props.allowClear,\n        clearIcon = props.clearIcon,\n        showArrow = props.showArrow,\n        inputIcon = props.inputIcon,\n        menuItemSelectedIcon = props.menuItemSelectedIcon,\n        disabled = props.disabled,\n        loading = props.loading,\n        defaultActiveFirstOption = props.defaultActiveFirstOption,\n        _props$notFoundConten = props.notFoundContent,\n        notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n        optionLabelProp = props.optionLabelProp,\n        backfill = props.backfill,\n        getInputElement = props.getInputElement,\n        getPopupContainer = props.getPopupContainer,\n        _props$listHeight = props.listHeight,\n        listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n        _props$listItemHeight = props.listItemHeight,\n        listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n        animation = props.animation,\n        transitionName = props.transitionName,\n        virtual = props.virtual,\n        dropdownStyle = props.dropdownStyle,\n        dropdownClassName = props.dropdownClassName,\n        dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n        dropdownRender = props.dropdownRender,\n        dropdownAlign = props.dropdownAlign,\n        _props$showAction = props.showAction,\n        showAction = _props$showAction === void 0 ? [] : _props$showAction,\n        direction = props.direction,\n        tokenSeparators = props.tokenSeparators,\n        tagRender = props.tagRender,\n        onPopupScroll = props.onPopupScroll,\n        onDropdownVisibleChange = props.onDropdownVisibleChange,\n        onFocus = props.onFocus,\n        onBlur = props.onBlur,\n        onKeyUp = props.onKeyUp,\n        onKeyDown = props.onKeyDown,\n        onMouseDown = props.onMouseDown,\n        onChange = props.onChange,\n        onSelect = props.onSelect,\n        onDeselect = props.onDeselect,\n        _props$internalProps = props.internalProps,\n        internalProps = _props$internalProps === void 0 ? {} : _props$internalProps,\n        restProps = _objectWithoutProperties(props, [\"prefixCls\", \"className\", \"id\", \"open\", \"defaultOpen\", \"options\", \"children\", \"mode\", \"value\", \"defaultValue\", \"labelInValue\", \"showSearch\", \"inputValue\", \"searchValue\", \"filterOption\", \"optionFilterProp\", \"autoClearSearchValue\", \"onSearch\", \"allowClear\", \"clearIcon\", \"showArrow\", \"inputIcon\", \"menuItemSelectedIcon\", \"disabled\", \"loading\", \"defaultActiveFirstOption\", \"notFoundContent\", \"optionLabelProp\", \"backfill\", \"getInputElement\", \"getPopupContainer\", \"listHeight\", \"listItemHeight\", \"animation\", \"transitionName\", \"virtual\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"showAction\", \"direction\", \"tokenSeparators\", \"tagRender\", \"onPopupScroll\", \"onDropdownVisibleChange\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\", \"onChange\", \"onSelect\", \"onDeselect\", \"internalProps\"]);\n\n    var useInternalProps = internalProps.mark === INTERNAL_PROPS_MARK;\n    var domProps = omitDOMProps ? omitDOMProps(restProps) : restProps;\n    DEFAULT_OMIT_PROPS.forEach(function (prop) {\n      delete domProps[prop];\n    });\n    var containerRef = React.useRef(null);\n    var triggerRef = React.useRef(null);\n    var selectorRef = React.useRef(null);\n    var listRef = React.useRef(null);\n    /** Used for component focused management */\n\n    var _useDelayReset = useDelayReset(),\n        _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n        mockFocused = _useDelayReset2[0],\n        setMockFocused = _useDelayReset2[1],\n        cancelSetMockFocused = _useDelayReset2[2]; // Inner id for accessibility usage. Only work in client side\n\n\n    var _React$useState = React.useState(),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        innerId = _React$useState2[0],\n        setInnerId = _React$useState2[1];\n\n    React.useEffect(function () {\n      setInnerId(\"rc_select_\".concat(getUUID()));\n    }, []);\n    var mergedId = id || innerId; // optionLabelProp\n\n    var mergedOptionLabelProp = optionLabelProp;\n\n    if (mergedOptionLabelProp === undefined) {\n      mergedOptionLabelProp = options ? 'label' : 'children';\n    } // labelInValue\n\n\n    var mergedLabelInValue = mode === 'combobox' ? false : labelInValue;\n    var isMultiple = mode === 'tags' || mode === 'multiple';\n    var mergedShowSearch = showSearch !== undefined ? showSearch : isMultiple || mode === 'combobox'; // ============================== Ref ===============================\n\n    var selectorDomRef = React.useRef(null);\n    React.useImperativeHandle(ref, function () {\n      return {\n        focus: selectorRef.current.focus,\n        blur: selectorRef.current.blur\n      };\n    }); // ============================= Value ==============================\n\n    var _React$useState3 = React.useState(value || defaultValue),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        innerValue = _React$useState4[0],\n        setInnerValue = _React$useState4[1];\n\n    var baseValue = value !== undefined ? value : innerValue; // Should reset when controlled to be uncontrolled\n\n    var prevValueRef = React.useRef(value);\n    React.useEffect(function () {\n      if (prevValueRef.current !== value && (value === undefined || value === null)) {\n        setInnerValue(undefined);\n      }\n\n      prevValueRef.current = value;\n    }, [value]);\n    /** Unique raw values */\n\n    var mergedRawValue = React.useMemo(function () {\n      return toInnerValue(baseValue, {\n        labelInValue: mergedLabelInValue,\n        combobox: mode === 'combobox'\n      });\n    }, [baseValue, mergedLabelInValue]);\n    /** We cache a set of raw values to speed up check */\n\n    var rawValues = React.useMemo(function () {\n      return new Set(mergedRawValue);\n    }, [mergedRawValue]); // ============================= Option =============================\n    // Set by option list active, it will merge into search input when mode is `combobox`\n\n    var _React$useState5 = React.useState(null),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        activeValue = _React$useState6[0],\n        setActiveValue = _React$useState6[1];\n\n    var _React$useState7 = React.useState(''),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        innerSearchValue = _React$useState8[0],\n        setInnerSearchValue = _React$useState8[1];\n\n    var mergedSearchValue = innerSearchValue;\n\n    if (mode === 'combobox' && value !== undefined) {\n      mergedSearchValue = value;\n    } else if (searchValue !== undefined) {\n      mergedSearchValue = searchValue;\n    } else if (inputValue) {\n      mergedSearchValue = inputValue;\n    }\n\n    var mergedOptions = React.useMemo(function () {\n      var newOptions = options;\n\n      if (newOptions === undefined) {\n        newOptions = convertChildrenToData(children);\n      }\n      /**\n       * `tags` should fill un-list item.\n       * This is not cool here since TreeSelect do not need this\n       */\n\n\n      if (mode === 'tags' && fillOptionsWithMissingValue) {\n        newOptions = fillOptionsWithMissingValue(newOptions, baseValue, mergedOptionLabelProp, labelInValue);\n      }\n\n      return newOptions || [];\n    }, [options, children, mode, baseValue]);\n    var mergedFlattenOptions = React.useMemo(function () {\n      return flattenOptions(mergedOptions, props);\n    }, [mergedOptions]);\n    var getValueOption = useCacheOptions(mergedRawValue, mergedFlattenOptions); // Display options for OptionList\n\n    var displayOptions = React.useMemo(function () {\n      if (!mergedSearchValue || !mergedShowSearch) {\n        return _toConsumableArray(mergedOptions);\n      }\n\n      var filteredOptions = filterOptions(mergedSearchValue, mergedOptions, {\n        optionFilterProp: optionFilterProp,\n        filterOption: mode === 'combobox' && filterOption === undefined ? function () {\n          return true;\n        } : filterOption\n      });\n\n      if (mode === 'tags' && filteredOptions.every(function (opt) {\n        return opt.value !== mergedSearchValue;\n      })) {\n        filteredOptions.unshift({\n          value: mergedSearchValue,\n          label: mergedSearchValue,\n          key: '__RC_SELECT_TAG_PLACEHOLDER__'\n        });\n      }\n\n      return filteredOptions;\n    }, [mergedOptions, mergedSearchValue, mode, mergedShowSearch]);\n    var displayFlattenOptions = React.useMemo(function () {\n      return flattenOptions(displayOptions, props);\n    }, [displayOptions]);\n    React.useEffect(function () {\n      if (listRef.current && listRef.current.scrollTo) {\n        listRef.current.scrollTo(0);\n      }\n    }, [mergedSearchValue]); // ============================ Selector ============================\n\n    var displayValues = React.useMemo(function () {\n      return mergedRawValue.map(function (val) {\n        var valueOptions = getValueOption([val]);\n        var displayValue = getLabeledValue(val, {\n          options: valueOptions,\n          prevValue: baseValue,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        });\n        return _objectSpread(_objectSpread({}, displayValue), {}, {\n          disabled: isValueDisabled(val, valueOptions)\n        });\n      });\n    }, [baseValue, mergedOptions]); // Polyfill with cache label\n\n    displayValues = useCacheDisplayValue(displayValues);\n\n    var triggerSelect = function triggerSelect(newValue, isSelect, source) {\n      var newValueOption = getValueOption([newValue]);\n      var outOption = findValueOption([newValue], newValueOption)[0];\n\n      if (!internalProps.skipTriggerSelect) {\n        // Skip trigger `onSelect` or `onDeselect` if configured\n        var selectValue = mergedLabelInValue ? getLabeledValue(newValue, {\n          options: newValueOption,\n          prevValue: baseValue,\n          labelInValue: mergedLabelInValue,\n          optionLabelProp: mergedOptionLabelProp\n        }) : newValue;\n\n        if (isSelect && onSelect) {\n          onSelect(selectValue, outOption);\n        } else if (!isSelect && onDeselect) {\n          onDeselect(selectValue, outOption);\n        }\n      } // Trigger internal event\n\n\n      if (useInternalProps) {\n        if (isSelect && internalProps.onRawSelect) {\n          internalProps.onRawSelect(newValue, outOption, source);\n        } else if (!isSelect && internalProps.onRawDeselect) {\n          internalProps.onRawDeselect(newValue, outOption, source);\n        }\n      }\n    };\n\n    var triggerChange = function triggerChange(newRawValues) {\n      if (useInternalProps && internalProps.skipTriggerChange) {\n        return;\n      }\n\n      var newRawValuesOptions = getValueOption(newRawValues);\n      var outValues = toOuterValues(Array.from(newRawValues), {\n        labelInValue: mergedLabelInValue,\n        options: newRawValuesOptions,\n        getLabeledValue: getLabeledValue,\n        prevValue: baseValue,\n        optionLabelProp: mergedOptionLabelProp\n      });\n      var outValue = isMultiple ? outValues : outValues[0]; // Skip trigger if prev & current value is both empty\n\n      if (onChange && (mergedRawValue.length !== 0 || outValues.length !== 0)) {\n        var outOptions = findValueOption(newRawValues, newRawValuesOptions);\n        onChange(outValue, isMultiple ? outOptions : outOptions[0]);\n      }\n\n      setInnerValue(outValue);\n    };\n\n    var onInternalSelect = function onInternalSelect(newValue, _ref) {\n      var selected = _ref.selected,\n          source = _ref.source;\n\n      if (disabled) {\n        return;\n      }\n\n      var newRawValue;\n\n      if (isMultiple) {\n        newRawValue = new Set(mergedRawValue);\n\n        if (selected) {\n          newRawValue.add(newValue);\n        } else {\n          newRawValue.delete(newValue);\n        }\n      } else {\n        newRawValue = new Set();\n        newRawValue.add(newValue);\n      } // Multiple always trigger change and single should change if value changed\n\n\n      if (isMultiple || !isMultiple && Array.from(mergedRawValue)[0] !== newValue) {\n        triggerChange(Array.from(newRawValue));\n      } // Trigger `onSelect`. Single mode always trigger select\n\n\n      triggerSelect(newValue, !isMultiple || selected, source); // Clean search value if single or configured\n\n      if (mode === 'combobox') {\n        setInnerSearchValue(String(newValue));\n        setActiveValue('');\n      } else if (!isMultiple || autoClearSearchValue) {\n        setInnerSearchValue('');\n        setActiveValue('');\n      }\n    };\n\n    var onInternalOptionSelect = function onInternalOptionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'option'\n      }));\n    };\n\n    var onInternalSelectionSelect = function onInternalSelectionSelect(newValue, info) {\n      onInternalSelect(newValue, _objectSpread(_objectSpread({}, info), {}, {\n        source: 'selection'\n      }));\n    }; // ============================= Input ==============================\n    // Only works in `combobox`\n\n\n    var customizeInputElement = mode === 'combobox' && getInputElement && getInputElement() || null; // ============================== Open ==============================\n\n    var _useMergedState = useMergedState(undefined, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        innerOpen = _useMergedState2[0],\n        setInnerOpen = _useMergedState2[1];\n\n    var mergedOpen = innerOpen; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n    var emptyListContent = !notFoundContent && !displayOptions.length;\n\n    if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n      mergedOpen = false;\n    }\n\n    var triggerOpen = emptyListContent ? false : mergedOpen;\n\n    var onToggleOpen = function onToggleOpen(newOpen) {\n      var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n\n      if (innerOpen !== nextOpen && !disabled) {\n        setInnerOpen(nextOpen);\n\n        if (onDropdownVisibleChange) {\n          onDropdownVisibleChange(nextOpen);\n        }\n      }\n    };\n\n    useSelectTriggerControl([containerRef.current, triggerRef.current && triggerRef.current.getPopupElement()], triggerOpen, onToggleOpen); // ============================= Search =============================\n\n    var triggerSearch = function triggerSearch(searchText, fromTyping, isCompositing) {\n      var ret = true;\n      var newSearchText = searchText;\n      setActiveValue(null); // Check if match the `tokenSeparators`\n\n      var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators);\n      var patchRawValues = patchLabels;\n\n      if (mode === 'combobox') {\n        // Only typing will trigger onChange\n        if (fromTyping) {\n          triggerChange([newSearchText]);\n        }\n      } else if (patchLabels) {\n        newSearchText = '';\n\n        if (mode !== 'tags') {\n          patchRawValues = patchLabels.map(function (label) {\n            var item = mergedFlattenOptions.find(function (_ref2) {\n              var data = _ref2.data;\n              return data[mergedOptionLabelProp] === label;\n            });\n            return item ? item.data.value : null;\n          }).filter(function (val) {\n            return val !== null;\n          });\n        }\n\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), _toConsumableArray(patchRawValues))));\n        triggerChange(newRawValues);\n        newRawValues.forEach(function (newRawValue) {\n          triggerSelect(newRawValue, true, 'input');\n        }); // Should close when paste finish\n\n        onToggleOpen(false); // Tell Selector that break next actions\n\n        ret = false;\n      }\n\n      setInnerSearchValue(newSearchText);\n\n      if (onSearch && mergedSearchValue !== newSearchText) {\n        onSearch(newSearchText);\n      }\n\n      return ret;\n    }; // Close dropdown when disabled change\n\n\n    React.useEffect(function () {\n      if (innerOpen && !!disabled) {\n        setInnerOpen(false);\n      }\n    }, [disabled]); // Close will clean up single mode search text\n\n    React.useEffect(function () {\n      if (!mergedOpen && !isMultiple && mode !== 'combobox') {\n        triggerSearch('', false, false);\n      }\n    }, [mergedOpen]); // ============================ Keyboard ============================\n\n    /**\n     * We record input value here to check if can press to clean up by backspace\n     * - null: Key is not down, this is reset by key up\n     * - true: Search text is empty when first time backspace down\n     * - false: Search text is not empty when first time backspace down\n     */\n\n    var _useLock = useLock(),\n        _useLock2 = _slicedToArray(_useLock, 2),\n        getClearLock = _useLock2[0],\n        setClearLock = _useLock2[1]; // KeyDown\n\n\n    var onInternalKeyDown = function onInternalKeyDown(event) {\n      var clearLock = getClearLock();\n      var which = event.which; // We only manage open state here, close logic should handle by list component\n\n      if (!mergedOpen && which === KeyCode.ENTER) {\n        onToggleOpen(true);\n      }\n\n      setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n      if (which === KeyCode.BACKSPACE && !clearLock && isMultiple && !mergedSearchValue && mergedRawValue.length) {\n        var removeInfo = removeLastEnabledValue(displayValues, mergedRawValue);\n\n        if (removeInfo.removedValue !== null) {\n          triggerChange(removeInfo.values);\n          triggerSelect(removeInfo.removedValue, false, 'input');\n        }\n      }\n\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current;\n\n        (_listRef$current = listRef.current).onKeyDown.apply(_listRef$current, [event].concat(rest));\n      }\n\n      if (onKeyDown) {\n        onKeyDown.apply(void 0, [event].concat(rest));\n      }\n    }; // KeyUp\n\n\n    var onInternalKeyUp = function onInternalKeyUp(event) {\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n\n      if (mergedOpen && listRef.current) {\n        var _listRef$current2;\n\n        (_listRef$current2 = listRef.current).onKeyUp.apply(_listRef$current2, [event].concat(rest));\n      }\n\n      if (onKeyUp) {\n        onKeyUp.apply(void 0, [event].concat(rest));\n      }\n    }; // ========================== Focus / Blur ==========================\n\n    /** Record real focus status */\n\n\n    var focusRef = React.useRef(false);\n\n    var onContainerFocus = function onContainerFocus() {\n      setMockFocused(true);\n\n      if (!disabled) {\n        if (onFocus && !focusRef.current) {\n          onFocus.apply(void 0, arguments);\n        } // `showAction` should handle `focus` if set\n\n\n        if (showAction.includes('focus')) {\n          onToggleOpen(true);\n        }\n      }\n\n      focusRef.current = true;\n    };\n\n    var onContainerBlur = function onContainerBlur() {\n      setMockFocused(false, function () {\n        focusRef.current = false;\n        onToggleOpen(false);\n      });\n\n      if (disabled) {\n        return;\n      }\n\n      if (mergedSearchValue) {\n        // `tags` mode should move `searchValue` into values\n        if (mode === 'tags') {\n          triggerSearch('', false, false);\n          triggerChange(Array.from(new Set([].concat(_toConsumableArray(mergedRawValue), [mergedSearchValue]))));\n        } else if (mode === 'multiple') {\n          // `multiple` mode only clean the search value but not trigger event\n          setInnerSearchValue('');\n        }\n      }\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    var activeTimeoutIds = [];\n    React.useEffect(function () {\n      return function () {\n        activeTimeoutIds.forEach(function (timeoutId) {\n          return clearTimeout(timeoutId);\n        });\n        activeTimeoutIds.splice(0, activeTimeoutIds.length);\n      };\n    }, []);\n\n    var onInternalMouseDown = function onInternalMouseDown(event) {\n      var target = event.target;\n      var popupElement = triggerRef.current && triggerRef.current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n      if (popupElement && popupElement.contains(target)) {\n        var timeoutId = setTimeout(function () {\n          var index = activeTimeoutIds.indexOf(timeoutId);\n\n          if (index !== -1) {\n            activeTimeoutIds.splice(index, 1);\n          }\n\n          cancelSetMockFocused();\n\n          if (!popupElement.contains(document.activeElement)) {\n            selectorRef.current.focus();\n          }\n        });\n        activeTimeoutIds.push(timeoutId);\n      }\n\n      if (onMouseDown) {\n        for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          restArgs[_key3 - 1] = arguments[_key3];\n        }\n\n        onMouseDown.apply(void 0, [event].concat(restArgs));\n      }\n    }; // ========================= Accessibility ==========================\n\n\n    var _React$useState9 = React.useState(0),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        accessibilityIndex = _React$useState10[0],\n        setAccessibilityIndex = _React$useState10[1];\n\n    var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n\n    var onActiveValue = function onActiveValue(active, index) {\n      setAccessibilityIndex(index);\n\n      if (backfill && mode === 'combobox' && active !== null) {\n        setActiveValue(String(active));\n      }\n    }; // ============================= Popup ==============================\n\n\n    var _React$useState11 = React.useState(null),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        containerWidth = _React$useState12[0],\n        setContainerWidth = _React$useState12[1];\n\n    useLayoutEffect(function () {\n      if (triggerOpen) {\n        var newWidth = Math.ceil(containerRef.current.offsetWidth);\n\n        if (containerWidth !== newWidth) {\n          setContainerWidth(newWidth);\n        }\n      }\n    }, [triggerOpen]);\n    var popupNode = React.createElement(OptionList, {\n      ref: listRef,\n      prefixCls: prefixCls,\n      id: mergedId,\n      open: mergedOpen,\n      childrenAsData: !options,\n      options: displayOptions,\n      flattenOptions: displayFlattenOptions,\n      multiple: isMultiple,\n      values: rawValues,\n      height: listHeight,\n      itemHeight: listItemHeight,\n      onSelect: onInternalOptionSelect,\n      onToggleOpen: onToggleOpen,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      notFoundContent: notFoundContent,\n      onScroll: onPopupScroll,\n      searchValue: mergedSearchValue,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      virtual: virtual !== false && dropdownMatchSelectWidth !== false\n    }); // ============================= Clear ==============================\n\n    var clearNode;\n\n    var onClearMouseDown = function onClearMouseDown() {\n      // Trigger internal `onClear` event\n      if (useInternalProps && internalProps.onClear) {\n        internalProps.onClear();\n      }\n\n      triggerChange([]);\n      triggerSearch('', false, false);\n    };\n\n    if (!disabled && allowClear && (mergedRawValue.length || mergedSearchValue)) {\n      clearNode = React.createElement(TransBtn, {\n        className: \"\".concat(prefixCls, \"-clear\"),\n        onMouseDown: onClearMouseDown,\n        customizeIcon: clearIcon\n      }, \"\\xD7\");\n    } // ============================= Arrow ==============================\n\n\n    var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !isMultiple && mode !== 'combobox';\n    var arrowNode;\n\n    if (mergedShowArrow) {\n      arrowNode = React.createElement(TransBtn, {\n        className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n        customizeIcon: inputIcon,\n        customizeIconProps: {\n          loading: loading,\n          searchValue: mergedSearchValue,\n          open: mergedOpen,\n          focused: mockFocused,\n          showSearch: mergedShowSearch\n        }\n      });\n    } // ============================ Warning =============================\n\n\n    if (process.env.NODE_ENV !== 'production' && warningProps) {\n      warningProps(props);\n    } // ============================= Render =============================\n\n\n    var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !isMultiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\n    return React.createElement(\"div\", Object.assign({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        display: 'flex',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(mergedRawValue.join(', '))), React.createElement(SelectTrigger, {\n      ref: triggerRef,\n      disabled: disabled,\n      prefixCls: prefixCls,\n      visible: triggerOpen,\n      popupElement: popupNode,\n      containerWidth: containerWidth,\n      animation: animation,\n      transitionName: transitionName,\n      dropdownStyle: dropdownStyle,\n      dropdownClassName: dropdownClassName,\n      direction: direction,\n      dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n      dropdownRender: dropdownRender,\n      dropdownAlign: dropdownAlign,\n      getPopupContainer: getPopupContainer,\n      empty: !mergedOptions.length,\n      getTriggerDOMNode: function getTriggerDOMNode() {\n        return selectorDomRef.current;\n      }\n    }, React.createElement(Selector, Object.assign({}, props, {\n      domRef: selectorDomRef,\n      prefixCls: prefixCls,\n      inputElement: customizeInputElement,\n      ref: selectorRef,\n      id: mergedId,\n      showSearch: mergedShowSearch,\n      mode: mode,\n      accessibilityIndex: accessibilityIndex,\n      multiple: isMultiple,\n      tagRender: tagRender,\n      values: displayValues,\n      open: mergedOpen,\n      onToggleOpen: onToggleOpen,\n      searchValue: mergedSearchValue,\n      activeValue: activeValue,\n      onSearch: triggerSearch,\n      onSelect: onInternalSelectionSelect\n    }))), arrowNode, clearNode);\n  }\n\n  var RefSelect = React.forwardRef(Select);\n  return RefSelect;\n}"]},"metadata":{},"sourceType":"module"}