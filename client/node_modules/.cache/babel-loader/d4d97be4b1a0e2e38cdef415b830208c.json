{"ast":null,"code":"import _regeneratorRuntime from\"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from\"react\";import{Typography,Select,Button}from\"antd\";import{AppContext,SET_ALGORITHM_SLICE_INDEX,SET_ALGORITHM_RESULT}from\"./context/appContext\";import{makeEDFG}from\"./apiService\";export var AppHeader=function AppHeader(){return/*#__PURE__*/React.createElement(\"header\",{className:\"App-header\"},/*#__PURE__*/React.createElement(Typography.Title,{level:1},\"Visual drift detection for sequence data analysis system\"),/*#__PURE__*/React.createElement(AppContext.Consumer,null,function(_ref){var state=_ref.state,dispatch=_ref.dispatch;var selectAlgorithmSliceIndex=function selectAlgorithmSliceIndex(index){return dispatch({type:SET_ALGORITHM_SLICE_INDEX,payload:{index:index}});};var getEdfgHandler=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var params,_yield$makeEDFG,_edfgs;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!state.session_id){_context.next=7;break;}params=_objectSpread({logName:state.session_id},state.defined);_context.next=4;return makeEDFG(params);case 4:_yield$makeEDFG=_context.sent;_edfgs=_yield$makeEDFG.paths_to_edfgs;dispatch({type:SET_ALGORITHM_RESULT,payload:_objectSpread(_objectSpread({},state.algorithmResult),{},{edfgs:_edfgs})});case 7:case\"end\":return _context.stop();}}},_callee);}));return function getEdfgHandler(){return _ref2.apply(this,arguments);};}();if(!state.algorithmResult){return null;}var _state$algorithmResul=state.algorithmResult,edfgs=_state$algorithmResul.edfgs,erraticMeasureData=_state$algorithmResul.erraticMeasureData,_state$algorithmSlice=state.algorithmSliceIndex,algorithmSliceIndex=_state$algorithmSlice===void 0?0:_state$algorithmSlice;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Select,{onChange:selectAlgorithmSliceIndex,defaultValue:0},erraticMeasureData.map(function(elem,index){return/*#__PURE__*/React.createElement(Select.Option,{value:index},\"Section \",index);})),!(edfgs===null||edfgs===void 0?void 0:edfgs[algorithmSliceIndex])&&/*#__PURE__*/React.createElement(Button,{onClick:getEdfgHandler},\"Get EDFG\"));}));};","map":{"version":3,"sources":["/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/AppHeader.tsx"],"names":["React","Typography","Select","Button","AppContext","SET_ALGORITHM_SLICE_INDEX","SET_ALGORITHM_RESULT","makeEDFG","AppHeader","state","dispatch","selectAlgorithmSliceIndex","index","type","payload","getEdfgHandler","session_id","params","logName","defined","edfgs","paths_to_edfgs","algorithmResult","erraticMeasureData","algorithmSliceIndex","map","elem"],"mappings":"0lBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,MAArB,CAA6BC,MAA7B,KAA2C,MAA3C,CAEA,OACEC,UADF,CAEEC,yBAFF,CAGEC,oBAHF,KAIO,sBAJP,CAKA,OAASC,QAAT,KAAyB,cAAzB,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,sBACvB,8BAAQ,SAAS,CAAC,YAAlB,eACE,oBAAC,UAAD,CAAY,KAAZ,EAAkB,KAAK,CAAE,CAAzB,6DADF,cAIE,oBAAC,UAAD,CAAY,QAAZ,MACG,cAAyB,IAAtBC,CAAAA,KAAsB,MAAtBA,KAAsB,CAAfC,QAAe,MAAfA,QAAe,CACxB,GAAMC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACC,KAAD,QAChCF,CAAAA,QAAQ,CAAC,CACPG,IAAI,CAAER,yBADC,CAEPS,OAAO,CAAE,CAAEF,KAAK,CAALA,KAAF,CAFF,CAAD,CADwB,EAAlC,CAKA,GAAMG,CAAAA,cAAc,2FAAG,yKACjBN,KAAK,CAACO,UADW,yBAEbC,MAFa,gBAGjBC,OAAO,CAAET,KAAK,CAACO,UAHE,EAIdP,KAAK,CAACU,OAJQ,wBAMqBZ,CAAAA,QAAQ,CAACU,MAAD,CAN7B,sCAMKG,MANL,iBAMXC,cANW,CAQnBX,QAAQ,CAAC,CACPG,IAAI,CAAEP,oBADC,CAEPQ,OAAO,gCACFL,KAAK,CAACa,eADJ,MAELF,KAAK,CAALA,MAFK,EAFA,CAAD,CAAR,CARmB,sDAAH,kBAAdL,CAAAA,cAAc,2CAApB,CAiBA,GAAI,CAACN,KAAK,CAACa,eAAX,CAA4B,CAC1B,MAAO,KAAP,CACD,CAzBuB,0BA8BpBb,KA9BoB,CA4BtBa,eA5BsB,CA4BHF,KA5BG,uBA4BHA,KA5BG,CA4BIG,kBA5BJ,uBA4BIA,kBA5BJ,uBA8BpBd,KA9BoB,CA6BtBe,mBA7BsB,CA6BtBA,mBA7BsB,gCA6BA,CA7BA,uBAgCxB,mBACE,4CACE,oBAAC,MAAD,EAAQ,QAAQ,CAAEb,yBAAlB,CAA6C,YAAY,CAAE,CAA3D,EACGY,kBAAkB,CAACE,GAAnB,CAAuB,SAACC,IAAD,CAAOd,KAAP,qBACtB,oBAAC,MAAD,CAAQ,MAAR,EAAe,KAAK,CAAEA,KAAtB,aAAsCA,KAAtC,CADsB,EAAvB,CADH,CADF,CAOG,EAACQ,KAAD,SAACA,KAAD,iBAACA,KAAK,CAAGI,mBAAH,CAAN,gBACC,oBAAC,MAAD,EAAQ,OAAO,CAAET,cAAjB,aARJ,CADF,CAaD,CA9CH,CAJF,CADuB,EAAlB","sourcesContent":["import React from \"react\";\nimport { Typography, Select, Button } from \"antd\";\n\nimport {\n  AppContext,\n  SET_ALGORITHM_SLICE_INDEX,\n  SET_ALGORITHM_RESULT,\n} from \"./context/appContext\";\nimport { makeEDFG } from \"./apiService\";\n\nexport const AppHeader = () => (\n  <header className=\"App-header\">\n    <Typography.Title level={1}>\n      Visual drift detection for sequence data analysis system\n    </Typography.Title>\n    <AppContext.Consumer>\n      {({ state, dispatch }) => {\n        const selectAlgorithmSliceIndex = (index: number) =>\n          dispatch({\n            type: SET_ALGORITHM_SLICE_INDEX,\n            payload: { index },\n          });\n        const getEdfgHandler = async () => {\n          if (state.session_id) {\n            const params = {\n              logName: state.session_id,\n              ...state.defined,\n            };\n            const { paths_to_edfgs: edfgs } = await makeEDFG(params);\n\n            dispatch({\n              type: SET_ALGORITHM_RESULT,\n              payload: {\n                ...state.algorithmResult,\n                edfgs,\n              },\n            });\n          }\n        };\n        if (!state.algorithmResult) {\n          return null;\n        }\n\n        const {\n          algorithmResult: { edfgs, erraticMeasureData },\n          algorithmSliceIndex = 0,\n        } = state;\n\n        return (\n          <div>\n            <Select onChange={selectAlgorithmSliceIndex} defaultValue={0}>\n              {erraticMeasureData.map((elem, index) => (\n                <Select.Option value={index}>Section {index}</Select.Option>\n              ))}\n            </Select>\n\n            {!edfgs?.[algorithmSliceIndex] && (\n              <Button onClick={getEdfgHandler}>Get EDFG</Button>\n            )}\n          </div>\n        );\n      }}\n    </AppContext.Consumer>\n  </header>\n);\n"]},"metadata":{},"sourceType":"module"}