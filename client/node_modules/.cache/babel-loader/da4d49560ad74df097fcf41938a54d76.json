{"ast":null,"code":"var _jsxFileName = \"/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/components/UploadComponent/index.tsx\";\nimport React, { useState, useContext } from \"react\";\nimport { Upload, Button, Empty, Typography } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { uploadFile } from \"../../apiService\";\nimport { AppContext, SET_SESSION_ACTION } from \"../../context/appContext\";\nimport \"./Upload.css\";\nexport const UploadComponent = () => {\n  const {\n    dispatch,\n    state\n  } = useContext(AppContext);\n  const [loading, setLoading] = useState(false);\n\n  if (state.session_id) {\n    return null;\n  }\n\n  const handleSubmitForm = async ({\n    file,\n    onSuccess,\n    onError\n  }) => {\n    if (file) {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      try {\n        const response = await uploadFile(formData);\n        dispatch({\n          type: SET_SESSION_ACTION,\n          payload: response\n        });\n        onSuccess(response, file);\n      } catch (error) {\n        console.log(error);\n        onError(error);\n      }\n\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Upload-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Empty, {\n    description: /*#__PURE__*/React.createElement(Typography.Title, {\n      level: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"TEXT TO START\"),\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    accept: \".xes\",\n    name: \"file\",\n    customRequest: handleSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    loading: loading,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(UploadOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), \" Click to upload a \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 50\n    }\n  }, \" .xes \"), \" file\"))));\n};","map":{"version":3,"sources":["/Users/yesh/Documents/WritePrograms/Process-Drift-Visualization-With-Declare/client/src/components/UploadComponent/index.tsx"],"names":["React","useState","useContext","Upload","Button","Empty","Typography","UploadOutlined","uploadFile","AppContext","SET_SESSION_ACTION","UploadComponent","dispatch","state","loading","setLoading","session_id","handleSubmitForm","file","onSuccess","onError","formData","FormData","append","response","type","payload","error","console","log","PRESENTED_IMAGE_SIMPLE"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,UAAhC,QAAkD,MAAlD;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,EAAqBC,kBAArB,QAA+C,0BAA/C;AACA,OAAO,cAAP;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsBX,UAAU,CAACO,UAAD,CAAtC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAU,KAAV,CAAtC;;AAEA,MAAIY,KAAK,CAACG,UAAV,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,QAAMC,gBAAgB,GAAG,OAAO;AAC9BC,IAAAA,IAD8B;AAE9BC,IAAAA,SAF8B;AAG9BC,IAAAA;AAH8B,GAAP,KAQnB;AACJ,QAAIF,IAAJ,EAAU;AACRH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMM,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBL,IAAxB;;AACA,UAAI;AACF,cAAMM,QAAQ,GAAG,MAAMhB,UAAU,CAACa,QAAD,CAAjC;AACAT,QAAAA,QAAQ,CAAC;AAAEa,UAAAA,IAAI,EAAEf,kBAAR;AAA4BgB,UAAAA,OAAO,EAAEF;AAArC,SAAD,CAAR;AACAL,QAAAA,SAAS,CAACK,QAAD,EAAWN,IAAX,CAAT;AACD,OAJD,CAIE,OAAOS,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAP,QAAAA,OAAO,CAACO,KAAD,CAAP;AACD;;AACDZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAvBD;;AAyBA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,WAAW,eACT,oBAAC,UAAD,CAAY,KAAZ;AAAkB,MAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ;AAIE,IAAA,KAAK,EAAEV,KAAK,CAACyB,sBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,MAAf;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAkC,IAAA,aAAa,EAAEb,gBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,OAAjB;AAA0B,IAAA,IAAI,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,sCACuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADvC,UADF,CANF,CADF,CADF;AAgBD,CAjDM","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Upload, Button, Empty, Typography } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nimport { uploadFile } from \"../../apiService\";\nimport { AppContext, SET_SESSION_ACTION } from \"../../context/appContext\";\nimport \"./Upload.css\";\n\nexport const UploadComponent = () => {\n  const { dispatch, state } = useContext(AppContext);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  if (state.session_id) {\n    return null;\n  }\n\n  const handleSubmitForm = async ({\n    file,\n    onSuccess,\n    onError,\n  }: {\n    file: File;\n    onSuccess: (response: object, file: File) => void;\n    onError: (event: Error, body?: Object) => void;\n  }) => {\n    if (file) {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      try {\n        const response = await uploadFile(formData);\n        dispatch({ type: SET_SESSION_ACTION, payload: response });\n        onSuccess(response, file);\n      } catch (error) {\n        console.log(error);\n        onError(error);\n      }\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"Upload-area\">\n      <Empty\n        description={\n          <Typography.Title level={2}>TEXT TO START</Typography.Title>\n        }\n        image={Empty.PRESENTED_IMAGE_SIMPLE}\n      >\n        <Upload accept=\".xes\" name=\"file\" customRequest={handleSubmitForm}>\n          <Button loading={loading} size=\"large\">\n            <UploadOutlined /> Click to upload a <b> .xes </b> file\n          </Button>\n        </Upload>\n      </Empty>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}